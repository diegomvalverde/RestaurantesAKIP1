{
  "{\"sourceRoot\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"filename\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"@babel/polyfill\");\n\nvar _server = _interopRequireDefault(require(\"./server\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction main() {\n  return _main.apply(this, arguments);\n}\n\nfunction _main() {\n  _main = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _server[\"default\"].listen(_server[\"default\"].get('port'));\n\n          case 2:\n            console.log('>>> Se ha iniciado en el puerto ', _server[\"default\"].get('port'), \" <<<\");\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _main.apply(this, arguments);\n}\n\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1haW4iLCJhcHAiLCJsaXN0ZW4iLCJnZXQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUVBOzs7Ozs7OztTQUVlQSxJOzs7Ozs7OzBCQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUVVQyxtQkFBSUMsTUFBSixDQUFXRCxtQkFBSUUsR0FBSixDQUFRLE1BQVIsQ0FBWCxDQUZWOztBQUFBO0FBR0lDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtDQUFaLEVBQWdESixtQkFBSUUsR0FBSixDQUFRLE1BQVIsQ0FBaEQsRUFBaUUsTUFBakU7O0FBSEo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztBQU1BSCxJQUFJIiwic291cmNlUm9vdCI6Ii9ob21lL2RpZWdvbXZhbHZlcmRlL0Rlc2t0b3AvUmVzdGF1cmFudGVzQUtJUDEvTm9kZVNlcnZlci9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNaSBhcGkgcG9kcsOhIHNlciBlamVjdXRhZGEgZW4gZGlzdGludG9zIGVudG9ybm9zXG5pbXBvcnQgJ0BiYWJlbC9wb2x5ZmlsbCc7XG5cbmltcG9ydCBhcHAgZnJvbSAnLi9zZXJ2ZXInO1xuXG5hc3luYyBmdW5jdGlvbiBtYWluKClcbntcbiAgICBhd2FpdCBhcHAubGlzdGVuKGFwcC5nZXQoJ3BvcnQnKSk7XG4gICAgY29uc29sZS5sb2coJz4+PiBTZSBoYSBpbmljaWFkbyBlbiBlbCBwdWVydG8gJywgYXBwLmdldCgncG9ydCcpLCBcIiA8PDxcIilcbn1cblxubWFpbigpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "main",
        "app",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;AAEA;;;;;;;;SAEeA,I;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUC,mBAAIC,MAAJ,CAAWD,mBAAIE,GAAJ,CAAQ,MAAR,CAAX,CAFV;;AAAA;AAGIC,YAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDJ,mBAAIE,GAAJ,CAAQ,MAAR,CAAhD,EAAiE,MAAjE;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMAH,IAAI",
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src",
      "sourcesContent": [
        "// Mi api podrá ser ejecutada en distintos entornos\nimport '@babel/polyfill';\n\nimport app from './server';\n\nasync function main()\n{\n    await app.listen(app.get('port'));\n    console.log('>>> Se ha iniciado en el puerto ', app.get('port'), \" <<<\")\n}\n\nmain();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568716344420
  },
  "{\"sourceRoot\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"filename\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _index = _interopRequireDefault(require(\"./routes/index.routes\"));\n\nvar _restaurants = _interopRequireDefault(require(\"./routes/restaurants.routes\"));\n\nvar _users = _interopRequireDefault(require(\"./routes/users.routes\"));\n\nvar _reviews = _interopRequireDefault(require(\"./routes/reviews.routes\"));\n\nvar _images = _interopRequireDefault(require(\"./routes/images.routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar path = require('path');\n\nvar app = (0, _express[\"default\"])(); // Static files\n\napp.use(_express[\"default\"][\"static\"](path.join(__dirname, '/uploads/'))); // Config\n\napp.set('port', process.env.PORT || 3000); // Rutas\n\n// Middlewares\napp.use(_express[\"default\"].json());\napp.use(_index[\"default\"]);\napp.use('/restaurants', _restaurants[\"default\"]);\napp.use('/users', _users[\"default\"]);\napp.use('/reviews', _reviews[\"default\"]);\napp.use('/images', _images[\"default\"]);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsImFwcCIsInVzZSIsImV4cHJlc3MiLCJqb2luIiwiX19kaXJuYW1lIiwic2V0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJqc29uIiwiSW5kZXhSb3V0ZXMiLCJSZXN0YXVyYW50c1JvdXRlcyIsIlVzZXJzUm91dGVzIiwiUmV2aWV3c1JvdXRlcyIsIkltYWdlc1JvdXRlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQVdBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBZEEsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVosQyxDQUVBOztBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUUMsOEJBQWVKLElBQUksQ0FBQ0ssSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFdBQXJCLENBQWYsQ0FBUixFLENBRUE7O0FBQ0FKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLE1BQVIsRUFBZ0JDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQXBDLEUsQ0FFQTs7QUFRQTtBQUVBUixHQUFHLENBQUNDLEdBQUosQ0FBUUMsb0JBQVFPLElBQVIsRUFBUjtBQUVBVCxHQUFHLENBQUNDLEdBQUosQ0FBUVMsaUJBQVI7QUFDQVYsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QlUsdUJBQXhCO0FBQ0FYLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFFBQVIsRUFBa0JXLGlCQUFsQjtBQUNBWixHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFSLEVBQW9CWSxtQkFBcEI7QUFDQWIsR0FBRyxDQUFDQyxHQUFKLENBQVEsU0FBUixFQUFtQmEsa0JBQW5CO2VBRWVkLEciLCJzb3VyY2VSb290IjoiL2hvbWUvZGllZ29tdmFsdmVyZGUvRGVza3RvcC9SZXN0YXVyYW50ZXNBS0lQMS9Ob2RlU2VydmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4vLyBTdGF0aWMgZmlsZXNcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJy91cGxvYWRzLycpKSk7XG5cbi8vIENvbmZpZ1xuYXBwLnNldCgncG9ydCcsIHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCk7XG5cbi8vIFJ1dGFzXG5pbXBvcnQgSW5kZXhSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvaW5kZXgucm91dGVzJztcbmltcG9ydCBSZXN0YXVyYW50c1JvdXRlcyBmcm9tICcuL3JvdXRlcy9yZXN0YXVyYW50cy5yb3V0ZXMnO1xuaW1wb3J0IFVzZXJzUm91dGVzIGZyb20gJy4vcm91dGVzL3VzZXJzLnJvdXRlcyc7XG5pbXBvcnQgUmV2aWV3c1JvdXRlcyBmcm9tICcuL3JvdXRlcy9yZXZpZXdzLnJvdXRlcyc7XG5pbXBvcnQgSW1hZ2VzUm91dGVzIGZyb20gJy4vcm91dGVzL2ltYWdlcy5yb3V0ZXMnO1xuXG5cbi8vIE1pZGRsZXdhcmVzXG5cbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuXG5hcHAudXNlKEluZGV4Um91dGVzKTtcbmFwcC51c2UoJy9yZXN0YXVyYW50cycsIFJlc3RhdXJhbnRzUm91dGVzKTtcbmFwcC51c2UoJy91c2VycycsIFVzZXJzUm91dGVzKTtcbmFwcC51c2UoJy9yZXZpZXdzJywgUmV2aWV3c1JvdXRlcyk7XG5hcHAudXNlKCcvaW1hZ2VzJywgSW1hZ2VzUm91dGVzKTtcblxuZXhwb3J0IGRlZmF1bHQgYXBwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "path",
        "require",
        "app",
        "use",
        "express",
        "join",
        "__dirname",
        "set",
        "process",
        "env",
        "PORT",
        "json",
        "IndexRoutes",
        "RestaurantsRoutes",
        "UsersRoutes",
        "ReviewsRoutes",
        "ImagesRoutes"
      ],
      "mappings": ";;;;;;;AACA;;AAWA;;AACA;;AACA;;AACA;;AACA;;;;AAdA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,8BAAeJ,IAAI,CAACK,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR,E,CAEA;;AACAJ,GAAG,CAACK,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC,E,CAEA;;AAQA;AAEAR,GAAG,CAACC,GAAJ,CAAQC,oBAAQO,IAAR,EAAR;AAEAT,GAAG,CAACC,GAAJ,CAAQS,iBAAR;AACAV,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBU,uBAAxB;AACAX,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBW,iBAAlB;AACAZ,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBY,mBAApB;AACAb,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBa,kBAAnB;eAEed,G",
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src",
      "sourcesContent": [
        "\nimport express from 'express';\nconst path = require('path');\nconst app = express();\n\n// Static files\napp.use(express.static(path.join(__dirname, '/uploads/')));\n\n// Config\napp.set('port', process.env.PORT || 3000);\n\n// Rutas\nimport IndexRoutes from './routes/index.routes';\nimport RestaurantsRoutes from './routes/restaurants.routes';\nimport UsersRoutes from './routes/users.routes';\nimport ReviewsRoutes from './routes/reviews.routes';\nimport ImagesRoutes from './routes/images.routes';\n\n\n// Middlewares\n\napp.use(express.json());\n\napp.use(IndexRoutes);\napp.use('/restaurants', RestaurantsRoutes);\napp.use('/users', UsersRoutes);\napp.use('/reviews', ReviewsRoutes);\napp.use('/images', ImagesRoutes);\n\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568848028049
  },
  "{\"sourceRoot\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"filename\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/index.routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/index.routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/index.routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/index.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
        "sourceFileName": "index.routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar router = (0, _express.Router)();\nrouter.get('/', function (req, res) {\n  res.send('Bienvenido a la busqueda de restaurantes.' + '\\n' + ' Esperamos que encuentres el indicado.');\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQ2hCO0FBQ0lBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLDhDQUNMLElBREssR0FFTCx3Q0FGSjtBQUdILENBTEQ7ZUFRZUosTSIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWVnb212YWx2ZXJkZS9EZXNrdG9wL1Jlc3RhdXJhbnRlc0FLSVAxL05vZGVTZXJ2ZXIvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Um91dGVyfSBmcm9tICdleHByZXNzJztcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xuXG5yb3V0ZXIuZ2V0KCcvJywgKHJlcSwgcmVzKSA9Plxue1xuICAgIHJlcy5zZW5kKCdCaWVudmVuaWRvIGEgbGEgYnVzcXVlZGEgZGUgcmVzdGF1cmFudGVzLicgK1xuICAgICAgICAnXFxuJyArXG4gICAgICAgICcgRXNwZXJhbW9zIHF1ZSBlbmN1ZW50cmVzIGVsIGluZGljYWRvLicpXG59XG4pO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.routes.js"
      ],
      "names": [
        "router",
        "get",
        "req",
        "res",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAChB;AACIA,EAAAA,GAAG,CAACC,IAAJ,CAAS,8CACL,IADK,GAEL,wCAFJ;AAGH,CALD;eAQeJ,M",
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
      "sourcesContent": [
        "import {Router} from 'express';\nconst router = Router();\n\nrouter.get('/', (req, res) =>\n{\n    res.send('Bienvenido a la busqueda de restaurantes.' +\n        '\\n' +\n        ' Esperamos que encuentres el indicado.')\n}\n);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568835456733
  },
  "{\"sourceRoot\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"filename\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/restaurants.routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/restaurants.routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/restaurants.routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/restaurants.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
        "sourceFileName": "restaurants.routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _database = require(\"../database\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar router = (0, _express.Router)();\n\nvar path = require('path'); // bluebird.promisifyAll(redis);\n//Database connection\n\n\n// import {ObjectID} from \"mongodb\";\nvar _require = require(\"mongodb\"),\n    ObjectID = _require.ObjectID; // router.get('/', async (req, res) => {});\n// router.get('/', async (req, res) => {\n//     try {\n//         const db = await connect();\n//         const proveedores = await db.collection(\"proveedores\").find({}, {proveedor: \"\", id: 0}).toArray();\n//         // console.log(proveedores);\n//         const products = [];\n//         for (let i = 0; i < proveedores.length; i++) {\n//             const prov = proveedores[i].proveedor;\n//             try {\n//\n//                 const pro = await db.collection(\"productos\").find({proveedor: prov}).toArray();\n//                 // console.log(pro[0].proveedor);\n//                 const prod = {proveedor:prov, online:1, productos:pro[0].productos};\n//                 redisClient.set(pro[0].proveedor, JSON.stringify(prod));\n//                 products.push(prod);\n//\n//             }\n//             catch(e) {\n//                 // console.log(e)\n//                 if(await redisClient.exists(prov))\n//                 {\n//                     const jsonProductos = JSON.parse(await getAsync(prov));\n//                     // console.log(JSON.parse(productos));\n//                     const prod = {proveedor:prov, online:0, productos:jsonProductos.productos};\n//                     redisClient.set(prov, JSON.stringify(prod));\n//                     products.push(prod);\n//                 }\n//             }\n//         }\n//         // const result = await db.collection(\"productos\").find({}).toArray();\n//         // console.log(proveedores[0].proveedor);\n//         // console.log(proveedores);\n//         res.json(products);\n//     }\n//     catch(e)\n//     {\n//\n//     }\n//     }\n//\n// );\n// Consulta un restaurante por id de mongo\n\n\nrouter.get('/:restaurantId',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var restaurantId, db, info, reviewsMongo, imagesMongo, images, reviews, i;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            restaurantId = req.params.restaurantId;\n            _context.next = 3;\n            return (0, _database.connect)();\n\n          case 3:\n            db = _context.sent;\n            _context.next = 6;\n            return db.collection('restaurants').findOne({\n              _id: ObjectID(restaurantId)\n            });\n\n          case 6:\n            info = _context.sent;\n            _context.next = 9;\n            return db.collection('reviews').find({\n              idRestaurant: ObjectID(restaurantId)\n            }).toArray();\n\n          case 9:\n            reviewsMongo = _context.sent;\n            _context.next = 12;\n            return db.collection('images').find({\n              idRestaurant: ObjectID(restaurantId)\n            }).toArray();\n\n          case 12:\n            imagesMongo = _context.sent;\n            images = [];\n            reviews = [];\n\n            for (i = 0; i < imagesMongo.length; i++) {\n              images.push(path.join('http://localhost:3000/' + imagesMongo[i].imageDir));\n            }\n\n            for (i = 0; i < reviewsMongo.length; i++) {\n              reviews.push(reviewsMongo[i]);\n            }\n\n            info.images = images;\n            info.reviews = reviews; // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n            // console.log(jsonResult);\n\n            res.json(info);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); // Consulta todos los restaurantes\n\nrouter.get('/',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var db, restaurantsMongo, z, restaurantId, reviewsMongo, imagesMongo, images, reviews, i;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _database.connect)();\n\n          case 2:\n            db = _context2.sent;\n            _context2.next = 5;\n            return db.collection('restaurants').find({}).toArray();\n\n          case 5:\n            restaurantsMongo = _context2.sent;\n            z = 0;\n\n          case 7:\n            if (!(z < restaurantsMongo.length)) {\n              _context2.next = 24;\n              break;\n            }\n\n            restaurantId = restaurantsMongo[z]._id;\n            _context2.next = 11;\n            return db.collection('reviews').find({\n              idRestaurant: ObjectID(restaurantId)\n            }).toArray();\n\n          case 11:\n            reviewsMongo = _context2.sent;\n            _context2.next = 14;\n            return db.collection('images').find({\n              idRestaurant: ObjectID(restaurantId)\n            }).toArray();\n\n          case 14:\n            imagesMongo = _context2.sent;\n            images = [];\n            reviews = [];\n\n            for (i = 0; i < imagesMongo.length; i++) {\n              images.push(path.join('http://localhost:3000/' + imagesMongo[i].imageDir));\n            }\n\n            for (i = 0; i < reviewsMongo.length; i++) {\n              reviews.push(reviewsMongo[i]);\n            }\n\n            restaurantsMongo[z].images = images;\n            restaurantsMongo[z].reviews = reviews;\n\n          case 21:\n            z++;\n            _context2.next = 7;\n            break;\n\n          case 24:\n            // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n            // console.log(jsonResult);\n            res.json(restaurantsMongo);\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // Consulta todos los restaurantes\n\nrouter.get('/',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var db, result;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return (0, _database.connect)();\n\n          case 2:\n            db = _context3.sent;\n            _context3.next = 5;\n            return db.collection('restaurants').find({}).toArray();\n\n          case 5:\n            result = _context3.sent;\n            // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n            // console.log(jsonResult);\n            res.json(result);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // Agregar un restaurantes\n\nrouter.post('/',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var db, restaurant, result;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return (0, _database.connect)();\n\n          case 2:\n            db = _context4.sent;\n            restaurant = {\n              name: req.body.name,\n              description: req.body.description,\n              location: req.body.location,\n              foodType: req.body.foodType,\n              contact: req.body.contact,\n              schedule: req.body.schedule\n            };\n            _context4.next = 6;\n            return db.collection(\"restaurants\").insertOne(restaurant);\n\n          case 6:\n            result = _context4.sent;\n            res.send('Restaurante agregado exitosamente');\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}()); // router.put('/:idProveedor/:idProducto', async (req, res) =>\n//     {\n//         const {idProveedor, idProducto} = req.params;\n//         const db = await connect();\n//         const result = await db.collection(\"productos\").updateOne({_id: ObjectID(idProveedor), \"productos.nombre\" : idProducto}, {$inc: {\"productos.$.inventario\": -1}});\n//\n//         // console.log(result.ops[0]);\n//         res.send('Compra exitosa');\n//     }\n// );\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "restaurants.routes.js"
      ],
      "names": [
        "router",
        "path",
        "require",
        "ObjectID",
        "get",
        "req",
        "res",
        "restaurantId",
        "params",
        "db",
        "collection",
        "findOne",
        "_id",
        "info",
        "find",
        "idRestaurant",
        "toArray",
        "reviewsMongo",
        "imagesMongo",
        "images",
        "reviews",
        "i",
        "length",
        "push",
        "join",
        "imageDir",
        "json",
        "restaurantsMongo",
        "z",
        "result",
        "post",
        "restaurant",
        "name",
        "body",
        "description",
        "location",
        "foodType",
        "contact",
        "schedule",
        "insertOne",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;AAMA;;;;;;AALA,IAAMA,MAAM,GAAG,sBAAf;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB,C,CACA;AAEA;;;AAGA;eAEmBA,OAAO,CAAC,SAAD,C;IAAnBC,Q,YAAAA,Q,EAGP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACAH,MAAM,CAACI,GAAP,CAAW,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA6B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,YADkB,GACFF,GAAG,CAACG,MADF,CAClBD,YADkB;AAAA;AAAA,mBAGR,wBAHQ;;AAAA;AAGnBE,YAAAA,EAHmB;AAAA;AAAA,mBAINA,EAAE,CAACC,UAAH,CAAc,aAAd,EAA6BC,OAA7B,CAAqC;AAACC,cAAAA,GAAG,EAAET,QAAQ,CAACI,YAAD;AAAd,aAArC,CAJM;;AAAA;AAInBM,YAAAA,IAJmB;AAAA;AAAA,mBAKEJ,EAAE,CAACC,UAAH,CAAc,SAAd,EAAyBI,IAAzB,CAA8B;AAACC,cAAAA,YAAY,EAAEZ,QAAQ,CAACI,YAAD;AAAvB,aAA9B,EAAsES,OAAtE,EALF;;AAAA;AAKnBC,YAAAA,YALmB;AAAA;AAAA,mBAMCR,EAAE,CAACC,UAAH,CAAc,QAAd,EAAwBI,IAAxB,CAA6B;AAACC,cAAAA,YAAY,EAAEZ,QAAQ,CAACI,YAAD;AAAvB,aAA7B,EAAqES,OAArE,EAND;;AAAA;AAMnBE,YAAAA,WANmB;AAQnBC,YAAAA,MARmB,GAQV,EARU;AASnBC,YAAAA,OATmB,GAST,EATS;;AAWzB,iBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACI,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CF,cAAAA,MAAM,CAACI,IAAP,CAAYtB,IAAI,CAACuB,IAAL,CAAU,2BAA2BN,WAAW,CAACG,CAAD,CAAX,CAAeI,QAApD,CAAZ;AACD;;AAED,iBAASJ,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGJ,YAAY,CAACK,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CD,cAAAA,OAAO,CAACG,IAAR,CAAaN,YAAY,CAACI,CAAD,CAAzB;AACD;;AAEDR,YAAAA,IAAI,CAACM,MAAL,GAAcA,MAAd;AACAN,YAAAA,IAAI,CAACO,OAAL,GAAeA,OAAf,CApByB,CAsBzB;AACA;;AACAd,YAAAA,GAAG,CAACoB,IAAJ,CAASb,IAAT;;AAxByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA,K,CA6BA;;AACAb,MAAM,CAACI,GAAP,CAAW,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGK,wBAHL;;AAAA;AAGNG,YAAAA,EAHM;AAAA;AAAA,mBAImBA,EAAE,CAACC,UAAH,CAAc,aAAd,EAA6BI,IAA7B,CAAkC,EAAlC,EAAsCE,OAAtC,EAJnB;;AAAA;AAINW,YAAAA,gBAJM;AAMHC,YAAAA,CANG,GAMC,CAND;;AAAA;AAAA,kBAMIA,CAAC,GAAGD,gBAAgB,CAACL,MANzB;AAAA;AAAA;AAAA;;AAOJf,YAAAA,YAPI,GAOWoB,gBAAgB,CAACC,CAAD,CAAhB,CAAoBhB,GAP/B;AAAA;AAAA,mBASiBH,EAAE,CAACC,UAAH,CAAc,SAAd,EAAyBI,IAAzB,CAA8B;AAACC,cAAAA,YAAY,EAAEZ,QAAQ,CAACI,YAAD;AAAvB,aAA9B,EAAsES,OAAtE,EATjB;;AAAA;AASJC,YAAAA,YATI;AAAA;AAAA,mBAUgBR,EAAE,CAACC,UAAH,CAAc,QAAd,EAAwBI,IAAxB,CAA6B;AAACC,cAAAA,YAAY,EAAEZ,QAAQ,CAACI,YAAD;AAAvB,aAA7B,EAAqES,OAArE,EAVhB;;AAAA;AAUJE,YAAAA,WAVI;AAYNC,YAAAA,MAZM,GAYG,EAZH;AAaNC,YAAAA,OAbM,GAaI,EAbJ;;AAeV,iBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACI,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CF,cAAAA,MAAM,CAACI,IAAP,CAAYtB,IAAI,CAACuB,IAAL,CAAU,2BAA2BN,WAAW,CAACG,CAAD,CAAX,CAAeI,QAApD,CAAZ;AACD;;AAED,iBAASJ,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGJ,YAAY,CAACK,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CD,cAAAA,OAAO,CAACG,IAAR,CAAaN,YAAY,CAACI,CAAD,CAAzB;AACD;;AAEDM,YAAAA,gBAAgB,CAACC,CAAD,CAAhB,CAAoBT,MAApB,GAA6BA,MAA7B;AACAQ,YAAAA,gBAAgB,CAACC,CAAD,CAAhB,CAAoBR,OAApB,GAA8BA,OAA9B;;AAxBU;AAMiCQ,YAAAA,CAAC,EANlC;AAAA;AAAA;;AAAA;AA8BZ;AACA;AACAtB,YAAAA,GAAG,CAACoB,IAAJ,CAASC,gBAAT;;AAhCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA,K,CAsCA;;AACA3B,MAAM,CAACI,GAAP,CAAW,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEK,wBAFL;;AAAA;AAENG,YAAAA,EAFM;AAAA;AAAA,mBAGSA,EAAE,CAACC,UAAH,CAAc,aAAd,EAA6BI,IAA7B,CAAkC,EAAlC,EAAsCE,OAAtC,EAHT;;AAAA;AAGNa,YAAAA,MAHM;AAIZ;AACA;AACAvB,YAAAA,GAAG,CAACoB,IAAJ,CAASG,MAAT;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA,K,CAaA;;AACA7B,MAAM,CAAC8B,IAAP,CAAY,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiB,kBAAOzB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEQ,wBAFR;;AAAA;AAEHG,YAAAA,EAFG;AAGHsB,YAAAA,UAHG,GAIL;AACIC,cAAAA,IAAI,EAAE3B,GAAG,CAAC4B,IAAJ,CAASD,IADnB;AAEIE,cAAAA,WAAW,EAAE7B,GAAG,CAAC4B,IAAJ,CAASC,WAF1B;AAGIC,cAAAA,QAAQ,EAAE9B,GAAG,CAAC4B,IAAJ,CAASE,QAHvB;AAIIC,cAAAA,QAAQ,EAAE/B,GAAG,CAAC4B,IAAJ,CAASG,QAJvB;AAKIC,cAAAA,OAAO,EAAEhC,GAAG,CAAC4B,IAAJ,CAASI,OALtB;AAMIC,cAAAA,QAAQ,EAAEjC,GAAG,CAAC4B,IAAJ,CAASK;AANvB,aAJK;AAAA;AAAA,mBAYY7B,EAAE,CAACC,UAAH,CAAc,aAAd,EAA6B6B,SAA7B,CAAuCR,UAAvC,CAZZ;;AAAA;AAYHF,YAAAA,MAZG;AAaTvB,YAAAA,GAAG,CAACkC,IAAJ,CAAS,mCAAT;;AAbS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,K,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;eAEexC,M",
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
      "sourcesContent": [
        "import {Router} from 'express';\nconst router = Router();\nconst path = require('path');\n// bluebird.promisifyAll(redis);\n\n//Database connection\nimport {connect} from \"../database\";\n\n// import {ObjectID} from \"mongodb\";\n\nconst {ObjectID} = require(\"mongodb\");\n\n\n// router.get('/', async (req, res) => {});\n\n\n// router.get('/', async (req, res) => {\n//     try {\n//         const db = await connect();\n//         const proveedores = await db.collection(\"proveedores\").find({}, {proveedor: \"\", id: 0}).toArray();\n//         // console.log(proveedores);\n//         const products = [];\n//         for (let i = 0; i < proveedores.length; i++) {\n//             const prov = proveedores[i].proveedor;\n//             try {\n//\n//                 const pro = await db.collection(\"productos\").find({proveedor: prov}).toArray();\n//                 // console.log(pro[0].proveedor);\n//                 const prod = {proveedor:prov, online:1, productos:pro[0].productos};\n//                 redisClient.set(pro[0].proveedor, JSON.stringify(prod));\n//                 products.push(prod);\n//\n//             }\n//             catch(e) {\n//                 // console.log(e)\n//                 if(await redisClient.exists(prov))\n//                 {\n//                     const jsonProductos = JSON.parse(await getAsync(prov));\n//                     // console.log(JSON.parse(productos));\n//                     const prod = {proveedor:prov, online:0, productos:jsonProductos.productos};\n//                     redisClient.set(prov, JSON.stringify(prod));\n//                     products.push(prod);\n//                 }\n//             }\n//         }\n//         // const result = await db.collection(\"productos\").find({}).toArray();\n//         // console.log(proveedores[0].proveedor);\n//         // console.log(proveedores);\n//         res.json(products);\n//     }\n//     catch(e)\n//     {\n//\n//     }\n//     }\n//\n// );\n\n// Consulta un restaurante por id de mongo\nrouter.get('/:restaurantId', async (req, res) => {\n    const {restaurantId} = req.params;\n\n    const db = await connect();\n    const info = await db.collection('restaurants').findOne({_id: ObjectID(restaurantId)});\n    const reviewsMongo = await db.collection('reviews').find({idRestaurant: ObjectID(restaurantId)}).toArray();\n    const imagesMongo = await db.collection('images').find({idRestaurant: ObjectID(restaurantId)}).toArray();\n\n    const images = [];\n    const reviews = [];\n\n    for (var i = 0; i < imagesMongo.length; i++) {\n      images.push(path.join('http://localhost:3000/' + imagesMongo[i].imageDir));\n    }\n\n    for (var i = 0; i < reviewsMongo.length; i++) {\n      reviews.push(reviewsMongo[i]);\n    }\n\n    info.images = images;\n    info.reviews = reviews;\n\n    // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n    // console.log(jsonResult);\n    res.json(info);\n\n}\n);\n\n// Consulta todos los restaurantes\nrouter.get('/', async (req, res) => {\n    // const {restaurantId} = req.params;\n\n    const db = await connect();\n    const restaurantsMongo = await db.collection('restaurants').find({}).toArray();\n\n    for (var z = 0; z < restaurantsMongo.length; z++) {\n      const restaurantId = restaurantsMongo[z]._id;\n\n      const reviewsMongo = await db.collection('reviews').find({idRestaurant: ObjectID(restaurantId)}).toArray();\n      const imagesMongo = await db.collection('images').find({idRestaurant: ObjectID(restaurantId)}).toArray();\n\n      var images = [];\n      var reviews = [];\n\n      for (var i = 0; i < imagesMongo.length; i++) {\n        images.push(path.join('http://localhost:3000/' + imagesMongo[i].imageDir));\n      }\n\n      for (var i = 0; i < reviewsMongo.length; i++) {\n        reviews.push(reviewsMongo[i]);\n      }\n\n      restaurantsMongo[z].images = images;\n      restaurantsMongo[z].reviews = reviews;\n\n    }\n\n\n\n    // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n    // console.log(jsonResult);\n    res.json(restaurantsMongo);\n\n}\n);\n\n\n// Consulta todos los restaurantes\nrouter.get('/', async (req, res) => {\n\n    const db = await connect();\n    const result = await db.collection('restaurants').find({}).toArray();\n    // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n    // console.log(jsonResult);\n    res.json(result);\n\n}\n);\n\n\n\n// Agregar un restaurantes\nrouter.post('/', async (req, res) =>\n    {\n        const db = await connect();\n        const restaurant =\n            {\n                name: req.body.name,\n                description: req.body.description,\n                location: req.body.location,\n                foodType: req.body.foodType,\n                contact: req.body.contact,\n                schedule: req.body.schedule\n            };\n        const result = await db.collection(\"restaurants\").insertOne(restaurant);\n        res.send('Restaurante agregado exitosamente');\n    }\n);\n\n// router.put('/:idProveedor/:idProducto', async (req, res) =>\n//     {\n//         const {idProveedor, idProducto} = req.params;\n//         const db = await connect();\n//         const result = await db.collection(\"productos\").updateOne({_id: ObjectID(idProveedor), \"productos.nombre\" : idProducto}, {$inc: {\"productos.$.inventario\": -1}});\n//\n//         // console.log(result.ops[0]);\n//         res.send('Compra exitosa');\n//     }\n// );\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569100813659
  },
  "{\"sourceRoot\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"filename\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/database.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connect = connect;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction connect() {\n  return _connect.apply(this, arguments);\n}\n\nfunction _connect() {\n  _connect = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var client;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mongodb[\"default\"].connect('mongodb://localhost:27017', {\n              useNewUrlParser: true,\n              connectTimeoutMS: 1000,\n              socketTimeoutMS: 1000,\n              serverSelectionTimeoutMS: 1000\n            });\n\n          case 3:\n            client = _context.sent;\n            return _context.abrupt(\"return\", client.db(\"restaurants\"));\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _connect.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbImNvbm5lY3QiLCJNb25nb0NsaWVudCIsInVzZU5ld1VybFBhcnNlciIsImNvbm5lY3RUaW1lb3V0TVMiLCJzb2NrZXRUaW1lb3V0TVMiLCJzZXJ2ZXJTZWxlY3Rpb25UaW1lb3V0TVMiLCJjbGllbnQiLCJkYiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7U0FFc0JBLE87Ozs7Ozs7MEJBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUlzQkMsb0JBQVlELE9BQVosQ0FBb0IsMkJBQXBCLEVBQ3JCO0FBQ0lFLGNBQUFBLGVBQWUsRUFBRSxJQURyQjtBQUVJQyxjQUFBQSxnQkFBZ0IsRUFBQyxJQUZyQjtBQUdJQyxjQUFBQSxlQUFlLEVBQUMsSUFIcEI7QUFJSUMsY0FBQUEsd0JBQXdCLEVBQUM7QUFKN0IsYUFEcUIsQ0FKdEI7O0FBQUE7QUFJT0MsWUFBQUEsTUFKUDtBQUFBLDZDQWNRQSxNQUFNLENBQUNDLEVBQVAsQ0FBVSxhQUFWLENBZFI7O0FBQUE7QUFBQTtBQUFBO0FBa0JDQyxZQUFBQSxPQUFPLENBQUNDLEdBQVI7O0FBbEJEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEciLCJzb3VyY2VSb290IjoiL2hvbWUvZGllZ29tdmFsdmVyZGUvRGVza3RvcC9SZXN0YXVyYW50ZXNBS0lQMS9Ob2RlU2VydmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNb25nb0NsaWVudCBmcm9tICdtb25nb2RiJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbm5lY3QoKVxue1xuICAgIHRyeVxuICAgIHtcbiAgICAgICAgY29uc3QgY2xpZW50ID0gYXdhaXQgTW9uZ29DbGllbnQuY29ubmVjdCgnbW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNycsXG4gICAgICAgIHtcbiAgICAgICAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgICAgICAgICAgIGNvbm5lY3RUaW1lb3V0TVM6MTAwMCxcbiAgICAgICAgICAgIHNvY2tldFRpbWVvdXRNUzoxMDAwLFxuICAgICAgICAgICAgc2VydmVyU2VsZWN0aW9uVGltZW91dE1TOjEwMDBcblxuICAgICAgICB9KTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ1NlIGhhIGNvbmVjdGFkbyBhIGxhIGJhc2UnKTtcblxuICAgICAgICByZXR1cm4gY2xpZW50LmRiKFwicmVzdGF1cmFudHNcIik7XG4gICAgfVxuICAgIGNhdGNoKGUpXG4gICAge1xuICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "connect",
        "MongoClient",
        "useNewUrlParser",
        "connectTimeoutMS",
        "socketTimeoutMS",
        "serverSelectionTimeoutMS",
        "client",
        "db",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;SAEsBA,O;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIsBC,oBAAYD,OAAZ,CAAoB,2BAApB,EACrB;AACIE,cAAAA,eAAe,EAAE,IADrB;AAEIC,cAAAA,gBAAgB,EAAC,IAFrB;AAGIC,cAAAA,eAAe,EAAC,IAHpB;AAIIC,cAAAA,wBAAwB,EAAC;AAJ7B,aADqB,CAJtB;;AAAA;AAIOC,YAAAA,MAJP;AAAA,6CAcQA,MAAM,CAACC,EAAP,CAAU,aAAV,CAdR;;AAAA;AAAA;AAAA;AAkBCC,YAAAA,OAAO,CAACC,GAAR;;AAlBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src",
      "sourcesContent": [
        "import MongoClient from 'mongodb';\n\nexport async function connect()\n{\n    try\n    {\n        const client = await MongoClient.connect('mongodb://localhost:27017',\n        {\n            useNewUrlParser: true,\n            connectTimeoutMS:1000,\n            socketTimeoutMS:1000,\n            serverSelectionTimeoutMS:1000\n\n        });\n        // console.log('Se ha conectado a la base');\n\n        return client.db(\"restaurants\");\n    }\n    catch(e)\n    {\n        console.log(e);\n    }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568718812130
  },
  "{\"sourceRoot\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"filename\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/users.routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/users.routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/users.routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/users.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
        "sourceFileName": "users.routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _database = require(\"../database\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar router = (0, _express.Router)(); // bluebird.promisifyAll(redis);\n//Database connection\n\n// import {ObjectID} from \"mongodb\";\nvar _require = require(\"mongodb\"),\n    ObjectID = _require.ObjectID; // router.get('/', async (req, res) => {});\n// router.get('/', async (req, res) => {\n//     try {\n//         const db = await connect();\n//         const proveedores = await db.collection(\"proveedores\").find({}, {proveedor: \"\", id: 0}).toArray();\n//         // console.log(proveedores);\n//         const products = [];\n//         for (let i = 0; i < proveedores.length; i++) {\n//             const prov = proveedores[i].proveedor;\n//             try {\n//\n//                 const pro = await db.collection(\"productos\").find({proveedor: prov}).toArray();\n//                 // console.log(pro[0].proveedor);\n//                 const prod = {proveedor:prov, online:1, productos:pro[0].productos};\n//                 redisClient.set(pro[0].proveedor, JSON.stringify(prod));\n//                 products.push(prod);\n//\n//             }\n//             catch(e) {\n//                 // console.log(e)\n//                 if(await redisClient.exists(prov))\n//                 {\n//                     const jsonProductos = JSON.parse(await getAsync(prov));\n//                     // console.log(JSON.parse(productos));\n//                     const prod = {proveedor:prov, online:0, productos:jsonProductos.productos};\n//                     redisClient.set(prov, JSON.stringify(prod));\n//                     products.push(prod);\n//                 }\n//             }\n//         }\n//         // const result = await db.collection(\"productos\").find({}).toArray();\n//         // console.log(proveedores[0].proveedor);\n//         // console.log(proveedores);\n//         res.json(products);\n//     }\n//     catch(e)\n//     {\n//\n//     }\n//     }\n//\n// );\n// Consulta un usuario por correo y email, evuelve un\n// true si lo encuentra y un false de lo contrario\n\n\nrouter.get('/',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var userEmail, userPass, db, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userEmail = req.body.email;\n            userPass = req.body.password;\n            _context.next = 4;\n            return (0, _database.connect)();\n\n          case 4:\n            db = _context.sent;\n            _context.next = 7;\n            return db.collection('users').findOne({\n              email: userEmail,\n              password: userPass\n            });\n\n          case 7:\n            result = _context.sent;\n            // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n            // console.log(jsonResult);\n            res.json(result);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); // Agregar un usuario\n\nrouter.post('/',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var db, user, result;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _database.connect)();\n\n          case 2:\n            db = _context2.sent;\n            user = {\n              name: req.body.name,\n              lastName1: req.body.lastName1,\n              lastName2: req.body.lastName2,\n              email: req.body.email,\n              password: req.body.password\n            };\n            _context2.next = 6;\n            return db.collection(\"users\").insertOne(user);\n\n          case 6:\n            result = _context2.sent;\n            res.send('Usuario agregado exitosamente');\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // router.put('/:idProveedor/:idProducto', async (req, res) =>\n//     {\n//         const {idProveedor, idProducto} = req.params;\n//         const db = await connect();\n//         const result = await db.collection(\"productos\").updateOne({_id: ObjectID(idProveedor), \"productos.nombre\" : idProducto}, {$inc: {\"productos.$.inventario\": -1}});\n//\n//         // console.log(result.ops[0]);\n//         res.send('Compra exitosa');\n//     }\n// );\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJyZXF1aXJlIiwiT2JqZWN0SUQiLCJnZXQiLCJyZXEiLCJyZXMiLCJ1c2VyRW1haWwiLCJib2R5IiwiZW1haWwiLCJ1c2VyUGFzcyIsInBhc3N3b3JkIiwiZGIiLCJjb2xsZWN0aW9uIiwiZmluZE9uZSIsInJlc3VsdCIsImpzb24iLCJwb3N0IiwidXNlciIsIm5hbWUiLCJsYXN0TmFtZTEiLCJsYXN0TmFtZTIiLCJpbnNlcnRPbmUiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBTUE7Ozs7OztBQUxBLElBQU1BLE1BQU0sR0FBRyxzQkFBZixDLENBRUE7QUFFQTs7QUFHQTtlQUVtQkMsT0FBTyxDQUFDLFNBQUQsQztJQUFuQkMsUSxZQUFBQSxRLEVBR1A7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7O0FBQ0FGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFnQixpQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNOQyxZQUFBQSxTQURNLEdBQ01GLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxLQURmO0FBRU5DLFlBQUFBLFFBRk0sR0FFS0wsR0FBRyxDQUFDRyxJQUFKLENBQVNHLFFBRmQ7QUFBQTtBQUFBLG1CQUlLLHdCQUpMOztBQUFBO0FBSU5DLFlBQUFBLEVBSk07QUFBQTtBQUFBLG1CQUtTQSxFQUFFLENBQUNDLFVBQUgsQ0FBYyxPQUFkLEVBQXVCQyxPQUF2QixDQUErQjtBQUFDTCxjQUFBQSxLQUFLLEVBQUVGLFNBQVI7QUFBbUJJLGNBQUFBLFFBQVEsRUFBRUQ7QUFBN0IsYUFBL0IsQ0FMVDs7QUFBQTtBQUtOSyxZQUFBQSxNQUxNO0FBTVo7QUFDQTtBQUNBVCxZQUFBQSxHQUFHLENBQUNVLElBQUosQ0FBU0QsTUFBVDs7QUFSWTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFoQjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxLLENBY0E7O0FBQ0FkLE1BQU0sQ0FBQ2dCLElBQVAsQ0FBWSxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBaUIsa0JBQU9aLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUVRLHdCQUZSOztBQUFBO0FBRUhNLFlBQUFBLEVBRkc7QUFHSE0sWUFBQUEsSUFIRyxHQUlMO0FBQ0lDLGNBQUFBLElBQUksRUFBRWQsR0FBRyxDQUFDRyxJQUFKLENBQVNXLElBRG5CO0FBRUlDLGNBQUFBLFNBQVMsRUFBRWYsR0FBRyxDQUFDRyxJQUFKLENBQVNZLFNBRnhCO0FBR0lDLGNBQUFBLFNBQVMsRUFBRWhCLEdBQUcsQ0FBQ0csSUFBSixDQUFTYSxTQUh4QjtBQUlJWixjQUFBQSxLQUFLLEVBQUVKLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxLQUpwQjtBQUtJRSxjQUFBQSxRQUFRLEVBQUVOLEdBQUcsQ0FBQ0csSUFBSixDQUFTRztBQUx2QixhQUpLO0FBQUE7QUFBQSxtQkFXWUMsRUFBRSxDQUFDQyxVQUFILENBQWMsT0FBZCxFQUF1QlMsU0FBdkIsQ0FBaUNKLElBQWpDLENBWFo7O0FBQUE7QUFXSEgsWUFBQUEsTUFYRztBQVlUVCxZQUFBQSxHQUFHLENBQUNpQixJQUFKLENBQVMsK0JBQVQ7O0FBWlM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBakI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsSyxDQWdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7ZUFFZXRCLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvZGllZ29tdmFsdmVyZGUvRGVza3RvcC9SZXN0YXVyYW50ZXNBS0lQMS9Ob2RlU2VydmVyL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1JvdXRlcn0gZnJvbSAnZXhwcmVzcyc7XG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcblxuLy8gYmx1ZWJpcmQucHJvbWlzaWZ5QWxsKHJlZGlzKTtcblxuLy9EYXRhYmFzZSBjb25uZWN0aW9uXG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gXCIuLi9kYXRhYmFzZVwiO1xuXG4vLyBpbXBvcnQge09iamVjdElEfSBmcm9tIFwibW9uZ29kYlwiO1xuXG5jb25zdCB7T2JqZWN0SUR9ID0gcmVxdWlyZShcIm1vbmdvZGJcIik7XG5cblxuLy8gcm91dGVyLmdldCgnLycsIGFzeW5jIChyZXEsIHJlcykgPT4ge30pO1xuXG5cbi8vIHJvdXRlci5nZXQoJy8nLCBhc3luYyAocmVxLCByZXMpID0+IHtcbi8vICAgICB0cnkge1xuLy8gICAgICAgICBjb25zdCBkYiA9IGF3YWl0IGNvbm5lY3QoKTtcbi8vICAgICAgICAgY29uc3QgcHJvdmVlZG9yZXMgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwicHJvdmVlZG9yZXNcIikuZmluZCh7fSwge3Byb3ZlZWRvcjogXCJcIiwgaWQ6IDB9KS50b0FycmF5KCk7XG4vLyAgICAgICAgIC8vIGNvbnNvbGUubG9nKHByb3ZlZWRvcmVzKTtcbi8vICAgICAgICAgY29uc3QgcHJvZHVjdHMgPSBbXTtcbi8vICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm92ZWVkb3Jlcy5sZW5ndGg7IGkrKykge1xuLy8gICAgICAgICAgICAgY29uc3QgcHJvdiA9IHByb3ZlZWRvcmVzW2ldLnByb3ZlZWRvcjtcbi8vICAgICAgICAgICAgIHRyeSB7XG4vL1xuLy8gICAgICAgICAgICAgICAgIGNvbnN0IHBybyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm9kdWN0b3NcIikuZmluZCh7cHJvdmVlZG9yOiBwcm92fSkudG9BcnJheSgpO1xuLy8gICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHByb1swXS5wcm92ZWVkb3IpO1xuLy8gICAgICAgICAgICAgICAgIGNvbnN0IHByb2QgPSB7cHJvdmVlZG9yOnByb3YsIG9ubGluZToxLCBwcm9kdWN0b3M6cHJvWzBdLnByb2R1Y3Rvc307XG4vLyAgICAgICAgICAgICAgICAgcmVkaXNDbGllbnQuc2V0KHByb1swXS5wcm92ZWVkb3IsIEpTT04uc3RyaW5naWZ5KHByb2QpKTtcbi8vICAgICAgICAgICAgICAgICBwcm9kdWN0cy5wdXNoKHByb2QpO1xuLy9cbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgIGNhdGNoKGUpIHtcbi8vICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhlKVxuLy8gICAgICAgICAgICAgICAgIGlmKGF3YWl0IHJlZGlzQ2xpZW50LmV4aXN0cyhwcm92KSlcbi8vICAgICAgICAgICAgICAgICB7XG4vLyAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGpzb25Qcm9kdWN0b3MgPSBKU09OLnBhcnNlKGF3YWl0IGdldEFzeW5jKHByb3YpKTtcbi8vICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coSlNPTi5wYXJzZShwcm9kdWN0b3MpKTtcbi8vICAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJvZCA9IHtwcm92ZWVkb3I6cHJvdiwgb25saW5lOjAsIHByb2R1Y3Rvczpqc29uUHJvZHVjdG9zLnByb2R1Y3Rvc307XG4vLyAgICAgICAgICAgICAgICAgICAgIHJlZGlzQ2xpZW50LnNldChwcm92LCBKU09OLnN0cmluZ2lmeShwcm9kKSk7XG4vLyAgICAgICAgICAgICAgICAgICAgIHByb2R1Y3RzLnB1c2gocHJvZCk7XG4vLyAgICAgICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICB9XG4vLyAgICAgICAgIC8vIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm9kdWN0b3NcIikuZmluZCh7fSkudG9BcnJheSgpO1xuLy8gICAgICAgICAvLyBjb25zb2xlLmxvZyhwcm92ZWVkb3Jlc1swXS5wcm92ZWVkb3IpO1xuLy8gICAgICAgICAvLyBjb25zb2xlLmxvZyhwcm92ZWVkb3Jlcyk7XG4vLyAgICAgICAgIHJlcy5qc29uKHByb2R1Y3RzKTtcbi8vICAgICB9XG4vLyAgICAgY2F0Y2goZSlcbi8vICAgICB7XG4vL1xuLy8gICAgIH1cbi8vICAgICB9XG4vL1xuLy8gKTtcblxuLy8gQ29uc3VsdGEgdW4gdXN1YXJpbyBwb3IgY29ycmVvIHkgZW1haWwsIGV2dWVsdmUgdW5cbi8vIHRydWUgc2kgbG8gZW5jdWVudHJhIHkgdW4gZmFsc2UgZGUgbG8gY29udHJhcmlvXG5yb3V0ZXIuZ2V0KCcvJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgdXNlckVtYWlsID0gcmVxLmJvZHkuZW1haWw7XG4gICAgY29uc3QgdXNlclBhc3MgPSByZXEuYm9keS5wYXNzd29yZDtcblxuICAgIGNvbnN0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ3VzZXJzJykuZmluZE9uZSh7ZW1haWw6IHVzZXJFbWFpbCwgcGFzc3dvcmQ6IHVzZXJQYXNzfSk7XG4gICAgLy8gY29uc3QganNvblJlc3VsdCA9IHtwcm92ZWVkb3I6cmVzdWx0WzBdLnByb3ZlZWRvciwgb25saW5lOjEsIHByb2R1Y3RvczpyZXN1bHRbMF0ucHJvZHVjdG9zfTtcbiAgICAvLyBjb25zb2xlLmxvZyhqc29uUmVzdWx0KTtcbiAgICByZXMuanNvbihyZXN1bHQpO1xuXG59XG4pO1xuXG5cbi8vIEFncmVnYXIgdW4gdXN1YXJpb1xucm91dGVyLnBvc3QoJy8nLCBhc3luYyAocmVxLCByZXMpID0+XG4gICAge1xuICAgICAgICBjb25zdCBkYiA9IGF3YWl0IGNvbm5lY3QoKTtcbiAgICAgICAgY29uc3QgdXNlciA9XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogcmVxLmJvZHkubmFtZSxcbiAgICAgICAgICAgICAgICBsYXN0TmFtZTE6IHJlcS5ib2R5Lmxhc3ROYW1lMSxcbiAgICAgICAgICAgICAgICBsYXN0TmFtZTI6IHJlcS5ib2R5Lmxhc3ROYW1lMixcbiAgICAgICAgICAgICAgICBlbWFpbDogcmVxLmJvZHkuZW1haWwsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHJlcS5ib2R5LnBhc3N3b3JkXG4gICAgICAgICAgICB9O1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwidXNlcnNcIikuaW5zZXJ0T25lKHVzZXIpO1xuICAgICAgICByZXMuc2VuZCgnVXN1YXJpbyBhZ3JlZ2FkbyBleGl0b3NhbWVudGUnKTtcbiAgICB9XG4pO1xuXG4vLyByb3V0ZXIucHV0KCcvOmlkUHJvdmVlZG9yLzppZFByb2R1Y3RvJywgYXN5bmMgKHJlcSwgcmVzKSA9PlxuLy8gICAgIHtcbi8vICAgICAgICAgY29uc3Qge2lkUHJvdmVlZG9yLCBpZFByb2R1Y3RvfSA9IHJlcS5wYXJhbXM7XG4vLyAgICAgICAgIGNvbnN0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xuLy8gICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwicHJvZHVjdG9zXCIpLnVwZGF0ZU9uZSh7X2lkOiBPYmplY3RJRChpZFByb3ZlZWRvciksIFwicHJvZHVjdG9zLm5vbWJyZVwiIDogaWRQcm9kdWN0b30sIHskaW5jOiB7XCJwcm9kdWN0b3MuJC5pbnZlbnRhcmlvXCI6IC0xfX0pO1xuLy9cbi8vICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzdWx0Lm9wc1swXSk7XG4vLyAgICAgICAgIHJlcy5zZW5kKCdDb21wcmEgZXhpdG9zYScpO1xuLy8gICAgIH1cbi8vICk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.routes.js"
      ],
      "names": [
        "router",
        "require",
        "ObjectID",
        "get",
        "req",
        "res",
        "userEmail",
        "body",
        "email",
        "userPass",
        "password",
        "db",
        "collection",
        "findOne",
        "result",
        "json",
        "post",
        "user",
        "name",
        "lastName1",
        "lastName2",
        "insertOne",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;AAMA;;;;;;AALA,IAAMA,MAAM,GAAG,sBAAf,C,CAEA;AAEA;;AAGA;eAEmBC,OAAO,CAAC,SAAD,C;IAAnBC,Q,YAAAA,Q,EAGP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACAF,MAAM,CAACG,GAAP,CAAW,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,YAAAA,SADM,GACMF,GAAG,CAACG,IAAJ,CAASC,KADf;AAENC,YAAAA,QAFM,GAEKL,GAAG,CAACG,IAAJ,CAASG,QAFd;AAAA;AAAA,mBAIK,wBAJL;;AAAA;AAINC,YAAAA,EAJM;AAAA;AAAA,mBAKSA,EAAE,CAACC,UAAH,CAAc,OAAd,EAAuBC,OAAvB,CAA+B;AAACL,cAAAA,KAAK,EAAEF,SAAR;AAAmBI,cAAAA,QAAQ,EAAED;AAA7B,aAA/B,CALT;;AAAA;AAKNK,YAAAA,MALM;AAMZ;AACA;AACAT,YAAAA,GAAG,CAACU,IAAJ,CAASD,MAAT;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA,K,CAcA;;AACAd,MAAM,CAACgB,IAAP,CAAY,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiB,kBAAOZ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEQ,wBAFR;;AAAA;AAEHM,YAAAA,EAFG;AAGHM,YAAAA,IAHG,GAIL;AACIC,cAAAA,IAAI,EAAEd,GAAG,CAACG,IAAJ,CAASW,IADnB;AAEIC,cAAAA,SAAS,EAAEf,GAAG,CAACG,IAAJ,CAASY,SAFxB;AAGIC,cAAAA,SAAS,EAAEhB,GAAG,CAACG,IAAJ,CAASa,SAHxB;AAIIZ,cAAAA,KAAK,EAAEJ,GAAG,CAACG,IAAJ,CAASC,KAJpB;AAKIE,cAAAA,QAAQ,EAAEN,GAAG,CAACG,IAAJ,CAASG;AALvB,aAJK;AAAA;AAAA,mBAWYC,EAAE,CAACC,UAAH,CAAc,OAAd,EAAuBS,SAAvB,CAAiCJ,IAAjC,CAXZ;;AAAA;AAWHH,YAAAA,MAXG;AAYTT,YAAAA,GAAG,CAACiB,IAAJ,CAAS,+BAAT;;AAZS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,K,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;eAEetB,M",
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
      "sourcesContent": [
        "import {Router} from 'express';\nconst router = Router();\n\n// bluebird.promisifyAll(redis);\n\n//Database connection\nimport {connect} from \"../database\";\n\n// import {ObjectID} from \"mongodb\";\n\nconst {ObjectID} = require(\"mongodb\");\n\n\n// router.get('/', async (req, res) => {});\n\n\n// router.get('/', async (req, res) => {\n//     try {\n//         const db = await connect();\n//         const proveedores = await db.collection(\"proveedores\").find({}, {proveedor: \"\", id: 0}).toArray();\n//         // console.log(proveedores);\n//         const products = [];\n//         for (let i = 0; i < proveedores.length; i++) {\n//             const prov = proveedores[i].proveedor;\n//             try {\n//\n//                 const pro = await db.collection(\"productos\").find({proveedor: prov}).toArray();\n//                 // console.log(pro[0].proveedor);\n//                 const prod = {proveedor:prov, online:1, productos:pro[0].productos};\n//                 redisClient.set(pro[0].proveedor, JSON.stringify(prod));\n//                 products.push(prod);\n//\n//             }\n//             catch(e) {\n//                 // console.log(e)\n//                 if(await redisClient.exists(prov))\n//                 {\n//                     const jsonProductos = JSON.parse(await getAsync(prov));\n//                     // console.log(JSON.parse(productos));\n//                     const prod = {proveedor:prov, online:0, productos:jsonProductos.productos};\n//                     redisClient.set(prov, JSON.stringify(prod));\n//                     products.push(prod);\n//                 }\n//             }\n//         }\n//         // const result = await db.collection(\"productos\").find({}).toArray();\n//         // console.log(proveedores[0].proveedor);\n//         // console.log(proveedores);\n//         res.json(products);\n//     }\n//     catch(e)\n//     {\n//\n//     }\n//     }\n//\n// );\n\n// Consulta un usuario por correo y email, evuelve un\n// true si lo encuentra y un false de lo contrario\nrouter.get('/', async (req, res) => {\n    const userEmail = req.body.email;\n    const userPass = req.body.password;\n\n    const db = await connect();\n    const result = await db.collection('users').findOne({email: userEmail, password: userPass});\n    // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n    // console.log(jsonResult);\n    res.json(result);\n\n}\n);\n\n\n// Agregar un usuario\nrouter.post('/', async (req, res) =>\n    {\n        const db = await connect();\n        const user =\n            {\n                name: req.body.name,\n                lastName1: req.body.lastName1,\n                lastName2: req.body.lastName2,\n                email: req.body.email,\n                password: req.body.password\n            };\n        const result = await db.collection(\"users\").insertOne(user);\n        res.send('Usuario agregado exitosamente');\n    }\n);\n\n// router.put('/:idProveedor/:idProducto', async (req, res) =>\n//     {\n//         const {idProveedor, idProducto} = req.params;\n//         const db = await connect();\n//         const result = await db.collection(\"productos\").updateOne({_id: ObjectID(idProveedor), \"productos.nombre\" : idProducto}, {$inc: {\"productos.$.inventario\": -1}});\n//\n//         // console.log(result.ops[0]);\n//         res.send('Compra exitosa');\n//     }\n// );\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568759123860
  },
  "{\"sourceRoot\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"filename\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/reviews.routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/reviews.routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/reviews.routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/reviews.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
        "sourceFileName": "reviews.routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _database = require(\"../database\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar router = (0, _express.Router)(); // bluebird.promisifyAll(redis);\n//Database connection\n\n// import {ObjectID} from \"mongodb\";\nvar _require = require(\"mongodb\"),\n    ObjectID = _require.ObjectID; // router.get('/', async (req, res) => {});\n// router.get('/', async (req, res) => {\n//     try {\n//         const db = await connect();\n//         const proveedores = await db.collection(\"proveedores\").find({}, {proveedor: \"\", id: 0}).toArray();\n//         // console.log(proveedores);\n//         const products = [];\n//         for (let i = 0; i < proveedores.length; i++) {\n//             const prov = proveedores[i].proveedor;\n//             try {\n//\n//                 const pro = await db.collection(\"productos\").find({proveedor: prov}).toArray();\n//                 // console.log(pro[0].proveedor);\n//                 const prod = {proveedor:prov, online:1, productos:pro[0].productos};\n//                 redisClient.set(pro[0].proveedor, JSON.stringify(prod));\n//                 products.push(prod);\n//\n//             }\n//             catch(e) {\n//                 // console.log(e)\n//                 if(await redisClient.exists(prov))\n//                 {\n//                     const jsonProductos = JSON.parse(await getAsync(prov));\n//                     // console.log(JSON.parse(productos));\n//                     const prod = {proveedor:prov, online:0, productos:jsonProductos.productos};\n//                     redisClient.set(prov, JSON.stringify(prod));\n//                     products.push(prod);\n//                 }\n//             }\n//         }\n//         // const result = await db.collection(\"productos\").find({}).toArray();\n//         // console.log(proveedores[0].proveedor);\n//         // console.log(proveedores);\n//         res.json(products);\n//     }\n//     catch(e)\n//     {\n//\n//     }\n//     }\n//\n// );\n// Consulta un usuario por correo y email, evuelve un\n// true si lo encuentra y un false de lo contrario\n// router.get('/', async (req, res) => {\n//     const userEmail = req.body.email;\n//     const userPass = req.body.password;\n//\n//     const db = await connect();\n//     const result = await db.collection('users').findOne({email: userEmail, password: userPass});\n//     // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n//     // console.log(jsonResult);\n//     res.json(result);\n//\n// }\n// );\n//\n// Agregar una review\n\n\nrouter.post('/:idRestaurant',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var idRestaurant, db, review, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            idRestaurant = req.params.idRestaurant;\n            _context.next = 3;\n            return (0, _database.connect)();\n\n          case 3:\n            db = _context.sent;\n            review = {\n              idRestaurant: ObjectID(idRestaurant),\n              userId: req.body.userId,\n              date: new Date().getDate(),\n              score: req.body.score,\n              price: req.body.price,\n              comment: req.body.comment\n            };\n            _context.next = 7;\n            return db.collection(\"reviews\").insertOne(review);\n\n          case 7:\n            result = _context.sent;\n            res.send('Reseña agregada exitosamente');\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); // router.put('/:idProveedor/:idProducto', async (req, res) =>\n//     {\n//         const {idProveedor, idProducto} = req.params;\n//         const db = await connect();\n//         const result = await db.collection(\"productos\").updateOne({_id: ObjectID(idProveedor), \"productos.nombre\" : idProducto}, {$inc: {\"productos.$.inventario\": -1}});\n//\n//         // console.log(result.ops[0]);\n//         res.send('Compra exitosa');\n//     }\n// );\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJldmlld3Mucm91dGVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJlcXVpcmUiLCJPYmplY3RJRCIsInBvc3QiLCJyZXEiLCJyZXMiLCJpZFJlc3RhdXJhbnQiLCJwYXJhbXMiLCJkYiIsInJldmlldyIsInVzZXJJZCIsImJvZHkiLCJkYXRlIiwiRGF0ZSIsImdldERhdGUiLCJzY29yZSIsInByaWNlIiwiY29tbWVudCIsImNvbGxlY3Rpb24iLCJpbnNlcnRPbmUiLCJyZXN1bHQiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBTUE7Ozs7OztBQUxBLElBQU1BLE1BQU0sR0FBRyxzQkFBZixDLENBRUE7QUFFQTs7QUFHQTtlQUVtQkMsT0FBTyxDQUFDLFNBQUQsQztJQUFuQkMsUSxZQUFBQSxRLEVBR1A7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7OztBQUNBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxnQkFBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQThCLGlCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWpCQyxZQUFBQSxZQUZpQixHQUVERixHQUFHLENBQUNHLE1BRkgsQ0FFakJELFlBRmlCO0FBQUE7QUFBQSxtQkFHUCx3QkFITzs7QUFBQTtBQUdsQkUsWUFBQUEsRUFIa0I7QUFJbEJDLFlBQUFBLE1BSmtCLEdBS3BCO0FBQ0lILGNBQUFBLFlBQVksRUFBRUosUUFBUSxDQUFDSSxZQUFELENBRDFCO0FBRUlJLGNBQUFBLE1BQU0sRUFBRU4sR0FBRyxDQUFDTyxJQUFKLENBQVNELE1BRnJCO0FBR0lFLGNBQUFBLElBQUksRUFBRSxJQUFJQyxJQUFKLEdBQVdDLE9BQVgsRUFIVjtBQUlJQyxjQUFBQSxLQUFLLEVBQUVYLEdBQUcsQ0FBQ08sSUFBSixDQUFTSSxLQUpwQjtBQUtJQyxjQUFBQSxLQUFLLEVBQUVaLEdBQUcsQ0FBQ08sSUFBSixDQUFTSyxLQUxwQjtBQU1JQyxjQUFBQSxPQUFPLEVBQUViLEdBQUcsQ0FBQ08sSUFBSixDQUFTTTtBQU50QixhQUxvQjtBQUFBO0FBQUEsbUJBYUhULEVBQUUsQ0FBQ1UsVUFBSCxDQUFjLFNBQWQsRUFBeUJDLFNBQXpCLENBQW1DVixNQUFuQyxDQWJHOztBQUFBO0FBYWxCVyxZQUFBQSxNQWJrQjtBQWN4QmYsWUFBQUEsR0FBRyxDQUFDZ0IsSUFBSixDQUFTLDhCQUFUOztBQWR3QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUE5Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxLLENBa0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztlQUVlckIsTSIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWVnb212YWx2ZXJkZS9EZXNrdG9wL1Jlc3RhdXJhbnRlc0FLSVAxL05vZGVTZXJ2ZXIvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Um91dGVyfSBmcm9tICdleHByZXNzJztcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xuXG4vLyBibHVlYmlyZC5wcm9taXNpZnlBbGwocmVkaXMpO1xuXG4vL0RhdGFiYXNlIGNvbm5lY3Rpb25cbmltcG9ydCB7Y29ubmVjdH0gZnJvbSBcIi4uL2RhdGFiYXNlXCI7XG5cbi8vIGltcG9ydCB7T2JqZWN0SUR9IGZyb20gXCJtb25nb2RiXCI7XG5cbmNvbnN0IHtPYmplY3RJRH0gPSByZXF1aXJlKFwibW9uZ29kYlwiKTtcblxuXG4vLyByb3V0ZXIuZ2V0KCcvJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7fSk7XG5cblxuLy8gcm91dGVyLmdldCgnLycsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuLy8gICAgIHRyeSB7XG4vLyAgICAgICAgIGNvbnN0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xuLy8gICAgICAgICBjb25zdCBwcm92ZWVkb3JlcyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm92ZWVkb3Jlc1wiKS5maW5kKHt9LCB7cHJvdmVlZG9yOiBcIlwiLCBpZDogMH0pLnRvQXJyYXkoKTtcbi8vICAgICAgICAgLy8gY29uc29sZS5sb2cocHJvdmVlZG9yZXMpO1xuLy8gICAgICAgICBjb25zdCBwcm9kdWN0cyA9IFtdO1xuLy8gICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3ZlZWRvcmVzLmxlbmd0aDsgaSsrKSB7XG4vLyAgICAgICAgICAgICBjb25zdCBwcm92ID0gcHJvdmVlZG9yZXNbaV0ucHJvdmVlZG9yO1xuLy8gICAgICAgICAgICAgdHJ5IHtcbi8vXG4vLyAgICAgICAgICAgICAgICAgY29uc3QgcHJvID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInByb2R1Y3Rvc1wiKS5maW5kKHtwcm92ZWVkb3I6IHByb3Z9KS50b0FycmF5KCk7XG4vLyAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocHJvWzBdLnByb3ZlZWRvcik7XG4vLyAgICAgICAgICAgICAgICAgY29uc3QgcHJvZCA9IHtwcm92ZWVkb3I6cHJvdiwgb25saW5lOjEsIHByb2R1Y3Rvczpwcm9bMF0ucHJvZHVjdG9zfTtcbi8vICAgICAgICAgICAgICAgICByZWRpc0NsaWVudC5zZXQocHJvWzBdLnByb3ZlZWRvciwgSlNPTi5zdHJpbmdpZnkocHJvZCkpO1xuLy8gICAgICAgICAgICAgICAgIHByb2R1Y3RzLnB1c2gocHJvZCk7XG4vL1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgY2F0Y2goZSkge1xuLy8gICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGUpXG4vLyAgICAgICAgICAgICAgICAgaWYoYXdhaXQgcmVkaXNDbGllbnQuZXhpc3RzKHByb3YpKVxuLy8gICAgICAgICAgICAgICAgIHtcbi8vICAgICAgICAgICAgICAgICAgICAgY29uc3QganNvblByb2R1Y3RvcyA9IEpTT04ucGFyc2UoYXdhaXQgZ2V0QXN5bmMocHJvdikpO1xuLy8gICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhKU09OLnBhcnNlKHByb2R1Y3RvcykpO1xuLy8gICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm9kID0ge3Byb3ZlZWRvcjpwcm92LCBvbmxpbmU6MCwgcHJvZHVjdG9zOmpzb25Qcm9kdWN0b3MucHJvZHVjdG9zfTtcbi8vICAgICAgICAgICAgICAgICAgICAgcmVkaXNDbGllbnQuc2V0KHByb3YsIEpTT04uc3RyaW5naWZ5KHByb2QpKTtcbi8vICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdHMucHVzaChwcm9kKTtcbi8vICAgICAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgLy8gY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInByb2R1Y3Rvc1wiKS5maW5kKHt9KS50b0FycmF5KCk7XG4vLyAgICAgICAgIC8vIGNvbnNvbGUubG9nKHByb3ZlZWRvcmVzWzBdLnByb3ZlZWRvcik7XG4vLyAgICAgICAgIC8vIGNvbnNvbGUubG9nKHByb3ZlZWRvcmVzKTtcbi8vICAgICAgICAgcmVzLmpzb24ocHJvZHVjdHMpO1xuLy8gICAgIH1cbi8vICAgICBjYXRjaChlKVxuLy8gICAgIHtcbi8vXG4vLyAgICAgfVxuLy8gICAgIH1cbi8vXG4vLyApO1xuXG4vLyBDb25zdWx0YSB1biB1c3VhcmlvIHBvciBjb3JyZW8geSBlbWFpbCwgZXZ1ZWx2ZSB1blxuLy8gdHJ1ZSBzaSBsbyBlbmN1ZW50cmEgeSB1biBmYWxzZSBkZSBsbyBjb250cmFyaW9cbi8vIHJvdXRlci5nZXQoJy8nLCBhc3luYyAocmVxLCByZXMpID0+IHtcbi8vICAgICBjb25zdCB1c2VyRW1haWwgPSByZXEuYm9keS5lbWFpbDtcbi8vICAgICBjb25zdCB1c2VyUGFzcyA9IHJlcS5ib2R5LnBhc3N3b3JkO1xuLy9cbi8vICAgICBjb25zdCBkYiA9IGF3YWl0IGNvbm5lY3QoKTtcbi8vICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCd1c2VycycpLmZpbmRPbmUoe2VtYWlsOiB1c2VyRW1haWwsIHBhc3N3b3JkOiB1c2VyUGFzc30pO1xuLy8gICAgIC8vIGNvbnN0IGpzb25SZXN1bHQgPSB7cHJvdmVlZG9yOnJlc3VsdFswXS5wcm92ZWVkb3IsIG9ubGluZToxLCBwcm9kdWN0b3M6cmVzdWx0WzBdLnByb2R1Y3Rvc307XG4vLyAgICAgLy8gY29uc29sZS5sb2coanNvblJlc3VsdCk7XG4vLyAgICAgcmVzLmpzb24ocmVzdWx0KTtcbi8vXG4vLyB9XG4vLyApO1xuLy9cblxuLy8gQWdyZWdhciB1bmEgcmV2aWV3XG5yb3V0ZXIucG9zdCgnLzppZFJlc3RhdXJhbnQnLCBhc3luYyAocmVxLCByZXMpID0+XG4gICAge1xuICAgICAgY29uc3Qge2lkUmVzdGF1cmFudH0gPSByZXEucGFyYW1zO1xuICAgICAgY29uc3QgZGIgPSBhd2FpdCBjb25uZWN0KCk7XG4gICAgICBjb25zdCByZXZpZXcgPVxuICAgICAgICAgIHtcbiAgICAgICAgICAgICAgaWRSZXN0YXVyYW50OiBPYmplY3RJRChpZFJlc3RhdXJhbnQpLFxuICAgICAgICAgICAgICB1c2VySWQ6IHJlcS5ib2R5LnVzZXJJZCxcbiAgICAgICAgICAgICAgZGF0ZTogbmV3IERhdGUoKS5nZXREYXRlKCksXG4gICAgICAgICAgICAgIHNjb3JlOiByZXEuYm9keS5zY29yZSxcbiAgICAgICAgICAgICAgcHJpY2U6IHJlcS5ib2R5LnByaWNlLFxuICAgICAgICAgICAgICBjb21tZW50OiByZXEuYm9keS5jb21tZW50XG4gICAgICAgICAgfTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJyZXZpZXdzXCIpLmluc2VydE9uZShyZXZpZXcpO1xuICAgICAgcmVzLnNlbmQoJ1Jlc2XDsWEgYWdyZWdhZGEgZXhpdG9zYW1lbnRlJyk7XG4gICAgfVxuKTtcblxuLy8gcm91dGVyLnB1dCgnLzppZFByb3ZlZWRvci86aWRQcm9kdWN0bycsIGFzeW5jIChyZXEsIHJlcykgPT5cbi8vICAgICB7XG4vLyAgICAgICAgIGNvbnN0IHtpZFByb3ZlZWRvciwgaWRQcm9kdWN0b30gPSByZXEucGFyYW1zO1xuLy8gICAgICAgICBjb25zdCBkYiA9IGF3YWl0IGNvbm5lY3QoKTtcbi8vICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInByb2R1Y3Rvc1wiKS51cGRhdGVPbmUoe19pZDogT2JqZWN0SUQoaWRQcm92ZWVkb3IpLCBcInByb2R1Y3Rvcy5ub21icmVcIiA6IGlkUHJvZHVjdG99LCB7JGluYzoge1wicHJvZHVjdG9zLiQuaW52ZW50YXJpb1wiOiAtMX19KTtcbi8vXG4vLyAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3VsdC5vcHNbMF0pO1xuLy8gICAgICAgICByZXMuc2VuZCgnQ29tcHJhIGV4aXRvc2EnKTtcbi8vICAgICB9XG4vLyApO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "reviews.routes.js"
      ],
      "names": [
        "router",
        "require",
        "ObjectID",
        "post",
        "req",
        "res",
        "idRestaurant",
        "params",
        "db",
        "review",
        "userId",
        "body",
        "date",
        "Date",
        "getDate",
        "score",
        "price",
        "comment",
        "collection",
        "insertOne",
        "result",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;AAMA;;;;;;AALA,IAAMA,MAAM,GAAG,sBAAf,C,CAEA;AAEA;;AAGA;eAEmBC,OAAO,CAAC,SAAD,C;IAAnBC,Q,YAAAA,Q,EAGP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACAF,MAAM,CAACG,IAAP,CAAY,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA8B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjBC,YAAAA,YAFiB,GAEDF,GAAG,CAACG,MAFH,CAEjBD,YAFiB;AAAA;AAAA,mBAGP,wBAHO;;AAAA;AAGlBE,YAAAA,EAHkB;AAIlBC,YAAAA,MAJkB,GAKpB;AACIH,cAAAA,YAAY,EAAEJ,QAAQ,CAACI,YAAD,CAD1B;AAEII,cAAAA,MAAM,EAAEN,GAAG,CAACO,IAAJ,CAASD,MAFrB;AAGIE,cAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAHV;AAIIC,cAAAA,KAAK,EAAEX,GAAG,CAACO,IAAJ,CAASI,KAJpB;AAKIC,cAAAA,KAAK,EAAEZ,GAAG,CAACO,IAAJ,CAASK,KALpB;AAMIC,cAAAA,OAAO,EAAEb,GAAG,CAACO,IAAJ,CAASM;AANtB,aALoB;AAAA;AAAA,mBAaHT,EAAE,CAACU,UAAH,CAAc,SAAd,EAAyBC,SAAzB,CAAmCV,MAAnC,CAbG;;AAAA;AAalBW,YAAAA,MAbkB;AAcxBf,YAAAA,GAAG,CAACgB,IAAJ,CAAS,8BAAT;;AAdwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA,K,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;eAEerB,M",
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
      "sourcesContent": [
        "import {Router} from 'express';\nconst router = Router();\n\n// bluebird.promisifyAll(redis);\n\n//Database connection\nimport {connect} from \"../database\";\n\n// import {ObjectID} from \"mongodb\";\n\nconst {ObjectID} = require(\"mongodb\");\n\n\n// router.get('/', async (req, res) => {});\n\n\n// router.get('/', async (req, res) => {\n//     try {\n//         const db = await connect();\n//         const proveedores = await db.collection(\"proveedores\").find({}, {proveedor: \"\", id: 0}).toArray();\n//         // console.log(proveedores);\n//         const products = [];\n//         for (let i = 0; i < proveedores.length; i++) {\n//             const prov = proveedores[i].proveedor;\n//             try {\n//\n//                 const pro = await db.collection(\"productos\").find({proveedor: prov}).toArray();\n//                 // console.log(pro[0].proveedor);\n//                 const prod = {proveedor:prov, online:1, productos:pro[0].productos};\n//                 redisClient.set(pro[0].proveedor, JSON.stringify(prod));\n//                 products.push(prod);\n//\n//             }\n//             catch(e) {\n//                 // console.log(e)\n//                 if(await redisClient.exists(prov))\n//                 {\n//                     const jsonProductos = JSON.parse(await getAsync(prov));\n//                     // console.log(JSON.parse(productos));\n//                     const prod = {proveedor:prov, online:0, productos:jsonProductos.productos};\n//                     redisClient.set(prov, JSON.stringify(prod));\n//                     products.push(prod);\n//                 }\n//             }\n//         }\n//         // const result = await db.collection(\"productos\").find({}).toArray();\n//         // console.log(proveedores[0].proveedor);\n//         // console.log(proveedores);\n//         res.json(products);\n//     }\n//     catch(e)\n//     {\n//\n//     }\n//     }\n//\n// );\n\n// Consulta un usuario por correo y email, evuelve un\n// true si lo encuentra y un false de lo contrario\n// router.get('/', async (req, res) => {\n//     const userEmail = req.body.email;\n//     const userPass = req.body.password;\n//\n//     const db = await connect();\n//     const result = await db.collection('users').findOne({email: userEmail, password: userPass});\n//     // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n//     // console.log(jsonResult);\n//     res.json(result);\n//\n// }\n// );\n//\n\n// Agregar una review\nrouter.post('/:idRestaurant', async (req, res) =>\n    {\n      const {idRestaurant} = req.params;\n      const db = await connect();\n      const review =\n          {\n              idRestaurant: ObjectID(idRestaurant),\n              userId: req.body.userId,\n              date: new Date().getDate(),\n              score: req.body.score,\n              price: req.body.price,\n              comment: req.body.comment\n          };\n      const result = await db.collection(\"reviews\").insertOne(review);\n      res.send('Reseña agregada exitosamente');\n    }\n);\n\n// router.put('/:idProveedor/:idProducto', async (req, res) =>\n//     {\n//         const {idProveedor, idProducto} = req.params;\n//         const db = await connect();\n//         const result = await db.collection(\"productos\").updateOne({_id: ObjectID(idProveedor), \"productos.nombre\" : idProducto}, {$inc: {\"productos.$.inventario\": -1}});\n//\n//         // console.log(result.ops[0]);\n//         res.send('Compra exitosa');\n//     }\n// );\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569101152916
  },
  "{\"sourceRoot\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"filename\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/images.routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/images.routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/images.routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes/images.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
        "sourceFileName": "images.routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _database = require(\"../database\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar router = (0, _express.Router)();\n\nvar path = require('path');\n\nvar uuid = require('uuid'); // Para subir imagenes al server\n\n\nvar multer = require('multer'); // Propiedades para guardar la imagen\n\n\nvar storage = multer.diskStorage({\n  filename: function filename(req, file, cb) {\n    return cb(null, uuid() + path.extname(file.originalname).toLocaleLowerCase());\n  },\n  destination: 'src/uploads'\n}); //Database connection\n\n// import {ObjectID} from \"mongodb\";\nvar _require = require(\"mongodb\"),\n    ObjectID = _require.ObjectID; //Middlewares\n\n\nrouter.use(multer({\n  storage: storage,\n  dest: 'src/uploads',\n  limits: {\n    fileSize: 500000\n  },\n  fileFilter: function fileFilter(req, file, cb) {\n    var filetypes = /jpeg|jpg|png|gif/;\n    var mimetype = filetypes.test(file.mimetype);\n    var extname = filetypes.test(path.extname(file.originalname));\n\n    if (mimetype && extname) {\n      return cb(null, true);\n    }\n\n    cb(\"Error, el archivo debe ser una imagen valida\");\n  }\n}).single('file')); // router.get('/', async (req, res) => {});\n// router.get('/', async (req, res) => {\n//     try {\n//         const db = await connect();\n//         const proveedores = await db.collection(\"proveedores\").find({}, {proveedor: \"\", id: 0}).toArray();\n//         // console.log(proveedores);\n//         const products = [];\n//         for (let i = 0; i < proveedores.length; i++) {\n//             const prov = proveedores[i].proveedor;\n//             try {\n//\n//                 const pro = await db.collection(\"productos\").find({proveedor: prov}).toArray();\n//                 // console.log(pro[0].proveedor);\n//                 const prod = {proveedor:prov, online:1, productos:pro[0].productos};\n//                 redisClient.set(pro[0].proveedor, JSON.stringify(prod));\n//                 products.push(prod);\n//\n//             }\n//             catch(e) {\n//                 // console.log(e)\n//                 if(await redisClient.exists(prov))\n//                 {\n//                     const jsonProductos = JSON.parse(await getAsync(prov));\n//                     // console.log(JSON.parse(productos));\n//                     const prod = {proveedor:prov, online:0, productos:jsonProductos.productos};\n//                     redisClient.set(prov, JSON.stringify(prod));\n//                     products.push(prod);\n//                 }\n//             }\n//         }\n//         // const result = await db.collection(\"productos\").find({}).toArray();\n//         // console.log(proveedores[0].proveedor);\n//         // console.log(proveedores);\n//         res.json(products);\n//     }\n//     catch(e)\n//     {\n//\n//     }\n//     }\n//\n// );\n// Consulta una imagen de un restaurante con el id de mongo\n\nrouter.get('/:idRestaurante',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var idRestaurante, db, result, images, i;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            idRestaurante = req.params.idRestaurante;\n            _context.next = 3;\n            return (0, _database.connect)();\n\n          case 3:\n            db = _context.sent;\n            _context.next = 6;\n            return db.collection('images').find({\n              idRestaurant: ObjectID(idRestaurante)\n            }).toArray();\n\n          case 6:\n            result = _context.sent;\n            // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n            // console.log(jsonResult);\n            images = []; // console.log(result.length);\n\n            for (i = 0; i < result.length; i++) {\n              // res.push(result[i].imageDir)\n              // console.log(result[i]);\n              images.push(path.join('http://localhost:3000/' + result[i].imageDir));\n            }\n\n            res.json(images);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); // Subir una imagen al server con id de mongo del restaurante\n\nrouter.post('/:idRestaurant',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var db, idRestaurant, image, img, result;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _database.connect)();\n\n          case 2:\n            db = _context2.sent;\n            idRestaurant = req.params.idRestaurant;\n            image = req.file;\n            img = {\n              idRestaurant: ObjectID(idRestaurant),\n              imageDir: image.filename\n            };\n            _context2.next = 8;\n            return db.collection('images').insertOne(img);\n\n          case 8:\n            result = _context2.sent;\n            console.log(req.file);\n            res.send(\"Imagen agregada correctamente\");\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // Agregar un restaurantes\n// router.post('/', async (req, res) =>\n//     {\n//         const db = await connect();\n//         const restaurant =\n//             {\n//                 name: req.body.name,\n//                 description: req.body.description,\n//                 location: req.body.location,\n//                 foodType: req.body.foodType,\n//                 contact: req.body.contact,\n//                 schedule: req.body.scheule\n//             };\n//         const result = await db.collection(\"restaurants\").insertOne(restaurant);\n//         res.send('Restaurante agregado exitosamente');\n//     }\n// );\n// router.put('/:idProveedor/:idProducto', async (req, res) =>\n//     {\n//         const {idProveedor, idProducto} = req.params;\n//         const db = await connect();\n//         const result = await db.collection(\"productos\").updateOne({_id: ObjectID(idProveedor), \"productos.nombre\" : idProducto}, {$inc: {\"productos.$.inventario\": -1}});\n//\n//         // console.log(result.ops[0]);\n//         res.send('Compra exitosa');\n//     }\n// );\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlcy5yb3V0ZXMuanMiXSwibmFtZXMiOlsicm91dGVyIiwicGF0aCIsInJlcXVpcmUiLCJ1dWlkIiwibXVsdGVyIiwic3RvcmFnZSIsImRpc2tTdG9yYWdlIiwiZmlsZW5hbWUiLCJyZXEiLCJmaWxlIiwiY2IiLCJleHRuYW1lIiwib3JpZ2luYWxuYW1lIiwidG9Mb2NhbGVMb3dlckNhc2UiLCJkZXN0aW5hdGlvbiIsIk9iamVjdElEIiwidXNlIiwiZGVzdCIsImxpbWl0cyIsImZpbGVTaXplIiwiZmlsZUZpbHRlciIsImZpbGV0eXBlcyIsIm1pbWV0eXBlIiwidGVzdCIsInNpbmdsZSIsImdldCIsInJlcyIsImlkUmVzdGF1cmFudGUiLCJwYXJhbXMiLCJkYiIsImNvbGxlY3Rpb24iLCJmaW5kIiwiaWRSZXN0YXVyYW50IiwidG9BcnJheSIsInJlc3VsdCIsImltYWdlcyIsImkiLCJsZW5ndGgiLCJwdXNoIiwiam9pbiIsImltYWdlRGlyIiwianNvbiIsInBvc3QiLCJpbWFnZSIsImltZyIsImluc2VydE9uZSIsImNvbnNvbGUiLCJsb2ciLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBbUJBOzs7Ozs7QUFsQkEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmOztBQUNBLElBQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFwQixDLENBRUE7OztBQUNBLElBQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBdEIsQyxDQUtBOzs7QUFDQSxJQUFNRyxPQUFPLEdBQUdELE1BQU0sQ0FBQ0UsV0FBUCxDQUNkO0FBQ0VDLEVBQUFBLFFBQVEsRUFBRSxrQkFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLEVBQVo7QUFBQSxXQUFtQkEsRUFBRSxDQUFDLElBQUQsRUFBT1AsSUFBSSxLQUFLRixJQUFJLENBQUNVLE9BQUwsQ0FBYUYsSUFBSSxDQUFDRyxZQUFsQixFQUFnQ0MsaUJBQWhDLEVBQWhCLENBQXJCO0FBQUEsR0FEWjtBQUVFQyxFQUFBQSxXQUFXLEVBQUU7QUFGZixDQURjLENBQWhCLEMsQ0FNQTs7QUFHQTtlQUVtQlosT0FBTyxDQUFDLFNBQUQsQztJQUFuQmEsUSxZQUFBQSxRLEVBRVA7OztBQUVBZixNQUFNLENBQUNnQixHQUFQLENBQVdaLE1BQU0sQ0FFZjtBQUNFQyxFQUFBQSxPQUFPLEVBQUVBLE9BRFg7QUFFRVksRUFBQUEsSUFBSSxFQUFFLGFBRlI7QUFHRUMsRUFBQUEsTUFBTSxFQUFFO0FBQUNDLElBQUFBLFFBQVEsRUFBRTtBQUFYLEdBSFY7QUFJRUMsRUFBQUEsVUFBVSxFQUFFLG9CQUFDWixHQUFELEVBQU1DLElBQU4sRUFBWUMsRUFBWixFQUNaO0FBQ0UsUUFBTVcsU0FBUyxHQUFHLGtCQUFsQjtBQUNBLFFBQU1DLFFBQVEsR0FBR0QsU0FBUyxDQUFDRSxJQUFWLENBQWVkLElBQUksQ0FBQ2EsUUFBcEIsQ0FBakI7QUFDQSxRQUFNWCxPQUFPLEdBQUdVLFNBQVMsQ0FBQ0UsSUFBVixDQUFldEIsSUFBSSxDQUFDVSxPQUFMLENBQWFGLElBQUksQ0FBQ0csWUFBbEIsQ0FBZixDQUFoQjs7QUFDQSxRQUFHVSxRQUFRLElBQUlYLE9BQWYsRUFBdUI7QUFDckIsYUFBT0QsRUFBRSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVQ7QUFDRDs7QUFDREEsSUFBQUEsRUFBRSxDQUFDLDhDQUFELENBQUY7QUFDRDtBQWJILENBRmUsQ0FBTixDQWdCTmMsTUFoQk0sQ0FnQkMsTUFoQkQsQ0FBWCxFLENBbUJBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUNBeEIsTUFBTSxDQUFDeUIsR0FBUCxDQUFXLGlCQUFYO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBOEIsaUJBQU9qQixHQUFQLEVBQVlrQixHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNuQkMsWUFBQUEsYUFEbUIsR0FDRm5CLEdBQUcsQ0FBQ29CLE1BREYsQ0FDbkJELGFBRG1CO0FBQUE7QUFBQSxtQkFHVCx3QkFIUzs7QUFBQTtBQUdwQkUsWUFBQUEsRUFIb0I7QUFBQTtBQUFBLG1CQUlMQSxFQUFFLENBQUNDLFVBQUgsQ0FBYyxRQUFkLEVBQXdCQyxJQUF4QixDQUE2QjtBQUFDQyxjQUFBQSxZQUFZLEVBQUVqQixRQUFRLENBQUNZLGFBQUQ7QUFBdkIsYUFBN0IsRUFBc0VNLE9BQXRFLEVBSks7O0FBQUE7QUFJcEJDLFlBQUFBLE1BSm9CO0FBSzFCO0FBQ0E7QUFDTUMsWUFBQUEsTUFQb0IsR0FPWCxFQVBXLEVBUzFCOztBQUVBLGlCQUFTQyxDQUFULEdBQWEsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRixNQUFNLENBQUNHLE1BQTNCLEVBQW1DRCxDQUFDLEVBQXBDLEVBQXdDO0FBQ3RDO0FBQ0E7QUFDQUQsY0FBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVlyQyxJQUFJLENBQUNzQyxJQUFMLENBQVUsMkJBQTBCTCxNQUFNLENBQUNFLENBQUQsQ0FBTixDQUFVSSxRQUE5QyxDQUFaO0FBQ0Q7O0FBQ0RkLFlBQUFBLEdBQUcsQ0FBQ2UsSUFBSixDQUFTTixNQUFUOztBQWhCMEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBOUI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsSyxDQXFCQTs7QUFDQW5DLE1BQU0sQ0FBQzBDLElBQVAsQ0FBWSxnQkFBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQThCLGtCQUFPbEMsR0FBUCxFQUFZa0IsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNYLHdCQURXOztBQUFBO0FBQ3RCRyxZQUFBQSxFQURzQjtBQUVyQkcsWUFBQUEsWUFGcUIsR0FFTHhCLEdBQUcsQ0FBQ29CLE1BRkMsQ0FFckJJLFlBRnFCO0FBR3RCVyxZQUFBQSxLQUhzQixHQUdkbkMsR0FBRyxDQUFDQyxJQUhVO0FBS3RCbUMsWUFBQUEsR0FMc0IsR0FNNUI7QUFDSVosY0FBQUEsWUFBWSxFQUFFakIsUUFBUSxDQUFDaUIsWUFBRCxDQUQxQjtBQUVJUSxjQUFBQSxRQUFRLEVBQUVHLEtBQUssQ0FBQ3BDO0FBRnBCLGFBTjRCO0FBQUE7QUFBQSxtQkFXUHNCLEVBQUUsQ0FBQ0MsVUFBSCxDQUFjLFFBQWQsRUFBd0JlLFNBQXhCLENBQWtDRCxHQUFsQyxDQVhPOztBQUFBO0FBV3RCVixZQUFBQSxNQVhzQjtBQVk1QlksWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVl2QyxHQUFHLENBQUNDLElBQWhCO0FBQ0FpQixZQUFBQSxHQUFHLENBQUNzQixJQUFKLENBQVMsK0JBQVQ7O0FBYjRCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTlCOztBQUFBO0FBQUE7QUFBQTtBQUFBLEssQ0FvQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztlQUVlaEQsTSIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaWVnb212YWx2ZXJkZS9EZXNrdG9wL1Jlc3RhdXJhbnRlc0FLSVAxL05vZGVTZXJ2ZXIvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Um91dGVyfSBmcm9tICdleHByZXNzJztcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IHV1aWQgPSByZXF1aXJlKCd1dWlkJyk7XG5cbi8vIFBhcmEgc3ViaXIgaW1hZ2VuZXMgYWwgc2VydmVyXG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKTtcblxuXG5cblxuLy8gUHJvcGllZGFkZXMgcGFyYSBndWFyZGFyIGxhIGltYWdlblxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZShcbiAge1xuICAgIGZpbGVuYW1lOiAocmVxLCBmaWxlLCBjYikgPT4gY2IobnVsbCwgdXVpZCgpICsgcGF0aC5leHRuYW1lKGZpbGUub3JpZ2luYWxuYW1lKS50b0xvY2FsZUxvd2VyQ2FzZSgpKSxcbiAgICBkZXN0aW5hdGlvbjogJ3NyYy91cGxvYWRzJ1xuICB9KTtcblxuLy9EYXRhYmFzZSBjb25uZWN0aW9uXG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gXCIuLi9kYXRhYmFzZVwiO1xuXG4vLyBpbXBvcnQge09iamVjdElEfSBmcm9tIFwibW9uZ29kYlwiO1xuXG5jb25zdCB7T2JqZWN0SUR9ID0gcmVxdWlyZShcIm1vbmdvZGJcIik7XG5cbi8vTWlkZGxld2FyZXNcblxucm91dGVyLnVzZShtdWx0ZXJcbihcbiAge1xuICAgIHN0b3JhZ2U6IHN0b3JhZ2UsXG4gICAgZGVzdDogJ3NyYy91cGxvYWRzJyxcbiAgICBsaW1pdHM6IHtmaWxlU2l6ZTogNTAwMDAwfSxcbiAgICBmaWxlRmlsdGVyOiAocmVxLCBmaWxlLCBjYikgPT5cbiAgICB7XG4gICAgICBjb25zdCBmaWxldHlwZXMgPSAvanBlZ3xqcGd8cG5nfGdpZi87XG4gICAgICBjb25zdCBtaW1ldHlwZSA9IGZpbGV0eXBlcy50ZXN0KGZpbGUubWltZXR5cGUpO1xuICAgICAgY29uc3QgZXh0bmFtZSA9IGZpbGV0eXBlcy50ZXN0KHBhdGguZXh0bmFtZShmaWxlLm9yaWdpbmFsbmFtZSkpO1xuICAgICAgaWYobWltZXR5cGUgJiYgZXh0bmFtZSl7XG4gICAgICAgIHJldHVybiBjYihudWxsLCB0cnVlKTtcbiAgICAgIH1cbiAgICAgIGNiKFwiRXJyb3IsIGVsIGFyY2hpdm8gZGViZSBzZXIgdW5hIGltYWdlbiB2YWxpZGFcIilcbiAgICB9XG4gIH0pLnNpbmdsZSgnZmlsZScpKTtcblxuXG4vLyByb3V0ZXIuZ2V0KCcvJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7fSk7XG5cblxuLy8gcm91dGVyLmdldCgnLycsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuLy8gICAgIHRyeSB7XG4vLyAgICAgICAgIGNvbnN0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xuLy8gICAgICAgICBjb25zdCBwcm92ZWVkb3JlcyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm92ZWVkb3Jlc1wiKS5maW5kKHt9LCB7cHJvdmVlZG9yOiBcIlwiLCBpZDogMH0pLnRvQXJyYXkoKTtcbi8vICAgICAgICAgLy8gY29uc29sZS5sb2cocHJvdmVlZG9yZXMpO1xuLy8gICAgICAgICBjb25zdCBwcm9kdWN0cyA9IFtdO1xuLy8gICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3ZlZWRvcmVzLmxlbmd0aDsgaSsrKSB7XG4vLyAgICAgICAgICAgICBjb25zdCBwcm92ID0gcHJvdmVlZG9yZXNbaV0ucHJvdmVlZG9yO1xuLy8gICAgICAgICAgICAgdHJ5IHtcbi8vXG4vLyAgICAgICAgICAgICAgICAgY29uc3QgcHJvID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInByb2R1Y3Rvc1wiKS5maW5kKHtwcm92ZWVkb3I6IHByb3Z9KS50b0FycmF5KCk7XG4vLyAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocHJvWzBdLnByb3ZlZWRvcik7XG4vLyAgICAgICAgICAgICAgICAgY29uc3QgcHJvZCA9IHtwcm92ZWVkb3I6cHJvdiwgb25saW5lOjEsIHByb2R1Y3Rvczpwcm9bMF0ucHJvZHVjdG9zfTtcbi8vICAgICAgICAgICAgICAgICByZWRpc0NsaWVudC5zZXQocHJvWzBdLnByb3ZlZWRvciwgSlNPTi5zdHJpbmdpZnkocHJvZCkpO1xuLy8gICAgICAgICAgICAgICAgIHByb2R1Y3RzLnB1c2gocHJvZCk7XG4vL1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgY2F0Y2goZSkge1xuLy8gICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGUpXG4vLyAgICAgICAgICAgICAgICAgaWYoYXdhaXQgcmVkaXNDbGllbnQuZXhpc3RzKHByb3YpKVxuLy8gICAgICAgICAgICAgICAgIHtcbi8vICAgICAgICAgICAgICAgICAgICAgY29uc3QganNvblByb2R1Y3RvcyA9IEpTT04ucGFyc2UoYXdhaXQgZ2V0QXN5bmMocHJvdikpO1xuLy8gICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhKU09OLnBhcnNlKHByb2R1Y3RvcykpO1xuLy8gICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm9kID0ge3Byb3ZlZWRvcjpwcm92LCBvbmxpbmU6MCwgcHJvZHVjdG9zOmpzb25Qcm9kdWN0b3MucHJvZHVjdG9zfTtcbi8vICAgICAgICAgICAgICAgICAgICAgcmVkaXNDbGllbnQuc2V0KHByb3YsIEpTT04uc3RyaW5naWZ5KHByb2QpKTtcbi8vICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdHMucHVzaChwcm9kKTtcbi8vICAgICAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgLy8gY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInByb2R1Y3Rvc1wiKS5maW5kKHt9KS50b0FycmF5KCk7XG4vLyAgICAgICAgIC8vIGNvbnNvbGUubG9nKHByb3ZlZWRvcmVzWzBdLnByb3ZlZWRvcik7XG4vLyAgICAgICAgIC8vIGNvbnNvbGUubG9nKHByb3ZlZWRvcmVzKTtcbi8vICAgICAgICAgcmVzLmpzb24ocHJvZHVjdHMpO1xuLy8gICAgIH1cbi8vICAgICBjYXRjaChlKVxuLy8gICAgIHtcbi8vXG4vLyAgICAgfVxuLy8gICAgIH1cbi8vXG4vLyApO1xuXG4vLyBDb25zdWx0YSB1bmEgaW1hZ2VuIGRlIHVuIHJlc3RhdXJhbnRlIGNvbiBlbCBpZCBkZSBtb25nb1xucm91dGVyLmdldCgnLzppZFJlc3RhdXJhbnRlJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3Qge2lkUmVzdGF1cmFudGV9ID0gcmVxLnBhcmFtcztcblxuICAgIGNvbnN0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2ltYWdlcycpLmZpbmQoe2lkUmVzdGF1cmFudDogT2JqZWN0SUQoaWRSZXN0YXVyYW50ZSl9KS50b0FycmF5KCk7XG4gICAgLy8gY29uc3QganNvblJlc3VsdCA9IHtwcm92ZWVkb3I6cmVzdWx0WzBdLnByb3ZlZWRvciwgb25saW5lOjEsIHByb2R1Y3RvczpyZXN1bHRbMF0ucHJvZHVjdG9zfTtcbiAgICAvLyBjb25zb2xlLmxvZyhqc29uUmVzdWx0KTtcbiAgICBjb25zdCBpbWFnZXMgPSBbXTtcblxuICAgIC8vIGNvbnNvbGUubG9nKHJlc3VsdC5sZW5ndGgpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHQubGVuZ3RoOyBpKyspIHtcbiAgICAgIC8vIHJlcy5wdXNoKHJlc3VsdFtpXS5pbWFnZURpcilcbiAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3VsdFtpXSk7XG4gICAgICBpbWFnZXMucHVzaChwYXRoLmpvaW4oJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC8nICtyZXN1bHRbaV0uaW1hZ2VEaXIpKTtcbiAgICB9XG4gICAgcmVzLmpzb24oaW1hZ2VzKTtcblxufVxuKTtcblxuLy8gU3ViaXIgdW5hIGltYWdlbiBhbCBzZXJ2ZXIgY29uIGlkIGRlIG1vbmdvIGRlbCByZXN0YXVyYW50ZVxucm91dGVyLnBvc3QoJy86aWRSZXN0YXVyYW50JywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xuICBjb25zdCB7aWRSZXN0YXVyYW50fSA9IHJlcS5wYXJhbXM7XG4gIGNvbnN0IGltYWdlID0gcmVxLmZpbGU7XG5cbiAgY29uc3QgaW1nID1cbiAge1xuICAgICAgaWRSZXN0YXVyYW50OiBPYmplY3RJRChpZFJlc3RhdXJhbnQpLFxuICAgICAgaW1hZ2VEaXI6IGltYWdlLmZpbGVuYW1lXG4gIH07XG5cbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbignaW1hZ2VzJykuaW5zZXJ0T25lKGltZyk7XG4gIGNvbnNvbGUubG9nKHJlcS5maWxlKTtcbiAgcmVzLnNlbmQoXCJJbWFnZW4gYWdyZWdhZGEgY29ycmVjdGFtZW50ZVwiKTtcblxufVxuKTtcblxuXG5cbi8vIEFncmVnYXIgdW4gcmVzdGF1cmFudGVzXG4vLyByb3V0ZXIucG9zdCgnLycsIGFzeW5jIChyZXEsIHJlcykgPT5cbi8vICAgICB7XG4vLyAgICAgICAgIGNvbnN0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xuLy8gICAgICAgICBjb25zdCByZXN0YXVyYW50ID1cbi8vICAgICAgICAgICAgIHtcbi8vICAgICAgICAgICAgICAgICBuYW1lOiByZXEuYm9keS5uYW1lLFxuLy8gICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiByZXEuYm9keS5kZXNjcmlwdGlvbixcbi8vICAgICAgICAgICAgICAgICBsb2NhdGlvbjogcmVxLmJvZHkubG9jYXRpb24sXG4vLyAgICAgICAgICAgICAgICAgZm9vZFR5cGU6IHJlcS5ib2R5LmZvb2RUeXBlLFxuLy8gICAgICAgICAgICAgICAgIGNvbnRhY3Q6IHJlcS5ib2R5LmNvbnRhY3QsXG4vLyAgICAgICAgICAgICAgICAgc2NoZWR1bGU6IHJlcS5ib2R5LnNjaGV1bGVcbi8vICAgICAgICAgICAgIH07XG4vLyAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJyZXN0YXVyYW50c1wiKS5pbnNlcnRPbmUocmVzdGF1cmFudCk7XG4vLyAgICAgICAgIHJlcy5zZW5kKCdSZXN0YXVyYW50ZSBhZ3JlZ2FkbyBleGl0b3NhbWVudGUnKTtcbi8vICAgICB9XG4vLyApO1xuXG4vLyByb3V0ZXIucHV0KCcvOmlkUHJvdmVlZG9yLzppZFByb2R1Y3RvJywgYXN5bmMgKHJlcSwgcmVzKSA9PlxuLy8gICAgIHtcbi8vICAgICAgICAgY29uc3Qge2lkUHJvdmVlZG9yLCBpZFByb2R1Y3RvfSA9IHJlcS5wYXJhbXM7XG4vLyAgICAgICAgIGNvbnN0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xuLy8gICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwicHJvZHVjdG9zXCIpLnVwZGF0ZU9uZSh7X2lkOiBPYmplY3RJRChpZFByb3ZlZWRvciksIFwicHJvZHVjdG9zLm5vbWJyZVwiIDogaWRQcm9kdWN0b30sIHskaW5jOiB7XCJwcm9kdWN0b3MuJC5pbnZlbnRhcmlvXCI6IC0xfX0pO1xuLy9cbi8vICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzdWx0Lm9wc1swXSk7XG4vLyAgICAgICAgIHJlcy5zZW5kKCdDb21wcmEgZXhpdG9zYScpO1xuLy8gICAgIH1cbi8vICk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "images.routes.js"
      ],
      "names": [
        "router",
        "path",
        "require",
        "uuid",
        "multer",
        "storage",
        "diskStorage",
        "filename",
        "req",
        "file",
        "cb",
        "extname",
        "originalname",
        "toLocaleLowerCase",
        "destination",
        "ObjectID",
        "use",
        "dest",
        "limits",
        "fileSize",
        "fileFilter",
        "filetypes",
        "mimetype",
        "test",
        "single",
        "get",
        "res",
        "idRestaurante",
        "params",
        "db",
        "collection",
        "find",
        "idRestaurant",
        "toArray",
        "result",
        "images",
        "i",
        "length",
        "push",
        "join",
        "imageDir",
        "json",
        "post",
        "image",
        "img",
        "insertOne",
        "console",
        "log",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;AAmBA;;;;;;AAlBA,IAAMA,MAAM,GAAG,sBAAf;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB,C,CAKA;;;AACA,IAAMG,OAAO,GAAGD,MAAM,CAACE,WAAP,CACd;AACEC,EAAAA,QAAQ,EAAE,kBAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ;AAAA,WAAmBA,EAAE,CAAC,IAAD,EAAOP,IAAI,KAAKF,IAAI,CAACU,OAAL,CAAaF,IAAI,CAACG,YAAlB,EAAgCC,iBAAhC,EAAhB,CAArB;AAAA,GADZ;AAEEC,EAAAA,WAAW,EAAE;AAFf,CADc,CAAhB,C,CAMA;;AAGA;eAEmBZ,OAAO,CAAC,SAAD,C;IAAnBa,Q,YAAAA,Q,EAEP;;;AAEAf,MAAM,CAACgB,GAAP,CAAWZ,MAAM,CAEf;AACEC,EAAAA,OAAO,EAAEA,OADX;AAEEY,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,MAAM,EAAE;AAACC,IAAAA,QAAQ,EAAE;AAAX,GAHV;AAIEC,EAAAA,UAAU,EAAE,oBAACZ,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EACZ;AACE,QAAMW,SAAS,GAAG,kBAAlB;AACA,QAAMC,QAAQ,GAAGD,SAAS,CAACE,IAAV,CAAed,IAAI,CAACa,QAApB,CAAjB;AACA,QAAMX,OAAO,GAAGU,SAAS,CAACE,IAAV,CAAetB,IAAI,CAACU,OAAL,CAAaF,IAAI,CAACG,YAAlB,CAAf,CAAhB;;AACA,QAAGU,QAAQ,IAAIX,OAAf,EAAuB;AACrB,aAAOD,EAAE,CAAC,IAAD,EAAO,IAAP,CAAT;AACD;;AACDA,IAAAA,EAAE,CAAC,8CAAD,CAAF;AACD;AAbH,CAFe,CAAN,CAgBNc,MAhBM,CAgBC,MAhBD,CAAX,E,CAmBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAxB,MAAM,CAACyB,GAAP,CAAW,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA8B,iBAAOjB,GAAP,EAAYkB,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,aADmB,GACFnB,GAAG,CAACoB,MADF,CACnBD,aADmB;AAAA;AAAA,mBAGT,wBAHS;;AAAA;AAGpBE,YAAAA,EAHoB;AAAA;AAAA,mBAILA,EAAE,CAACC,UAAH,CAAc,QAAd,EAAwBC,IAAxB,CAA6B;AAACC,cAAAA,YAAY,EAAEjB,QAAQ,CAACY,aAAD;AAAvB,aAA7B,EAAsEM,OAAtE,EAJK;;AAAA;AAIpBC,YAAAA,MAJoB;AAK1B;AACA;AACMC,YAAAA,MAPoB,GAOX,EAPW,EAS1B;;AAEA,iBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC;AACA;AACAD,cAAAA,MAAM,CAACG,IAAP,CAAYrC,IAAI,CAACsC,IAAL,CAAU,2BAA0BL,MAAM,CAACE,CAAD,CAAN,CAAUI,QAA9C,CAAZ;AACD;;AACDd,YAAAA,GAAG,CAACe,IAAJ,CAASN,MAAT;;AAhB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA,K,CAqBA;;AACAnC,MAAM,CAAC0C,IAAP,CAAY,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA8B,kBAAOlC,GAAP,EAAYkB,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACX,wBADW;;AAAA;AACtBG,YAAAA,EADsB;AAErBG,YAAAA,YAFqB,GAELxB,GAAG,CAACoB,MAFC,CAErBI,YAFqB;AAGtBW,YAAAA,KAHsB,GAGdnC,GAAG,CAACC,IAHU;AAKtBmC,YAAAA,GALsB,GAM5B;AACIZ,cAAAA,YAAY,EAAEjB,QAAQ,CAACiB,YAAD,CAD1B;AAEIQ,cAAAA,QAAQ,EAAEG,KAAK,CAACpC;AAFpB,aAN4B;AAAA;AAAA,mBAWPsB,EAAE,CAACC,UAAH,CAAc,QAAd,EAAwBe,SAAxB,CAAkCD,GAAlC,CAXO;;AAAA;AAWtBV,YAAAA,MAXsB;AAY5BY,YAAAA,OAAO,CAACC,GAAR,CAAYvC,GAAG,CAACC,IAAhB;AACAiB,YAAAA,GAAG,CAACsB,IAAJ,CAAS,+BAAT;;AAb4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA,K,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;eAEehD,M",
      "sourceRoot": "/home/diegomvalverde/Desktop/RestaurantesAKIP1/NodeServer/src/routes",
      "sourcesContent": [
        "import {Router} from 'express';\nconst router = Router();\nconst path = require('path');\nconst uuid = require('uuid');\n\n// Para subir imagenes al server\nconst multer = require('multer');\n\n\n\n\n// Propiedades para guardar la imagen\nconst storage = multer.diskStorage(\n  {\n    filename: (req, file, cb) => cb(null, uuid() + path.extname(file.originalname).toLocaleLowerCase()),\n    destination: 'src/uploads'\n  });\n\n//Database connection\nimport {connect} from \"../database\";\n\n// import {ObjectID} from \"mongodb\";\n\nconst {ObjectID} = require(\"mongodb\");\n\n//Middlewares\n\nrouter.use(multer\n(\n  {\n    storage: storage,\n    dest: 'src/uploads',\n    limits: {fileSize: 500000},\n    fileFilter: (req, file, cb) =>\n    {\n      const filetypes = /jpeg|jpg|png|gif/;\n      const mimetype = filetypes.test(file.mimetype);\n      const extname = filetypes.test(path.extname(file.originalname));\n      if(mimetype && extname){\n        return cb(null, true);\n      }\n      cb(\"Error, el archivo debe ser una imagen valida\")\n    }\n  }).single('file'));\n\n\n// router.get('/', async (req, res) => {});\n\n\n// router.get('/', async (req, res) => {\n//     try {\n//         const db = await connect();\n//         const proveedores = await db.collection(\"proveedores\").find({}, {proveedor: \"\", id: 0}).toArray();\n//         // console.log(proveedores);\n//         const products = [];\n//         for (let i = 0; i < proveedores.length; i++) {\n//             const prov = proveedores[i].proveedor;\n//             try {\n//\n//                 const pro = await db.collection(\"productos\").find({proveedor: prov}).toArray();\n//                 // console.log(pro[0].proveedor);\n//                 const prod = {proveedor:prov, online:1, productos:pro[0].productos};\n//                 redisClient.set(pro[0].proveedor, JSON.stringify(prod));\n//                 products.push(prod);\n//\n//             }\n//             catch(e) {\n//                 // console.log(e)\n//                 if(await redisClient.exists(prov))\n//                 {\n//                     const jsonProductos = JSON.parse(await getAsync(prov));\n//                     // console.log(JSON.parse(productos));\n//                     const prod = {proveedor:prov, online:0, productos:jsonProductos.productos};\n//                     redisClient.set(prov, JSON.stringify(prod));\n//                     products.push(prod);\n//                 }\n//             }\n//         }\n//         // const result = await db.collection(\"productos\").find({}).toArray();\n//         // console.log(proveedores[0].proveedor);\n//         // console.log(proveedores);\n//         res.json(products);\n//     }\n//     catch(e)\n//     {\n//\n//     }\n//     }\n//\n// );\n\n// Consulta una imagen de un restaurante con el id de mongo\nrouter.get('/:idRestaurante', async (req, res) => {\n    const {idRestaurante} = req.params;\n\n    const db = await connect();\n    const result = await db.collection('images').find({idRestaurant: ObjectID(idRestaurante)}).toArray();\n    // const jsonResult = {proveedor:result[0].proveedor, online:1, productos:result[0].productos};\n    // console.log(jsonResult);\n    const images = [];\n\n    // console.log(result.length);\n\n    for (var i = 0; i < result.length; i++) {\n      // res.push(result[i].imageDir)\n      // console.log(result[i]);\n      images.push(path.join('http://localhost:3000/' +result[i].imageDir));\n    }\n    res.json(images);\n\n}\n);\n\n// Subir una imagen al server con id de mongo del restaurante\nrouter.post('/:idRestaurant', async (req, res) => {\n  const db = await connect();\n  const {idRestaurant} = req.params;\n  const image = req.file;\n\n  const img =\n  {\n      idRestaurant: ObjectID(idRestaurant),\n      imageDir: image.filename\n  };\n\n  const result = await db.collection('images').insertOne(img);\n  console.log(req.file);\n  res.send(\"Imagen agregada correctamente\");\n\n}\n);\n\n\n\n// Agregar un restaurantes\n// router.post('/', async (req, res) =>\n//     {\n//         const db = await connect();\n//         const restaurant =\n//             {\n//                 name: req.body.name,\n//                 description: req.body.description,\n//                 location: req.body.location,\n//                 foodType: req.body.foodType,\n//                 contact: req.body.contact,\n//                 schedule: req.body.scheule\n//             };\n//         const result = await db.collection(\"restaurants\").insertOne(restaurant);\n//         res.send('Restaurante agregado exitosamente');\n//     }\n// );\n\n// router.put('/:idProveedor/:idProducto', async (req, res) =>\n//     {\n//         const {idProveedor, idProducto} = req.params;\n//         const db = await connect();\n//         const result = await db.collection(\"productos\").updateOne({_id: ObjectID(idProveedor), \"productos.nombre\" : idProducto}, {$inc: {\"productos.$.inventario\": -1}});\n//\n//         // console.log(result.ops[0]);\n//         res.send('Compra exitosa');\n//     }\n// );\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569100372862
  }
}